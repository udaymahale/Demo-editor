{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\udaym\\\\OneDrive\\\\Desktop\\\\DraftJsEditor\\\\basic-editor\\\\src\\\\TextEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Editor, EditorState, convertToRaw, convertFromRaw, RichUtils } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport Button from './compoButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextEditor = () => {\n  _s();\n  const [editorState, setEditorState] = useState(() => {\n    const savedContent = localStorage.getItem('draftContent');\n    if (savedContent) {\n      const contentState = convertFromRaw(JSON.parse(savedContent));\n      return EditorState.createWithContent(contentState);\n    } else {\n      return EditorState.createEmpty();\n    }\n  });\n  useEffect(() => {\n    const contentState = editorState.getCurrentContent();\n    const rawContentState = convertToRaw(contentState);\n    localStorage.setItem('draftContent', JSON.stringify(rawContentState));\n  }, [editorState]);\n  const handleChange = newState => {\n    setEditorState(newState);\n  };\n  const handleKeyPress = e => {\n    const {\n      key\n    } = e;\n    const contentState = editorState.getCurrentContent();\n    const selection = editorState.getSelection();\n    if (key === '#' && selection.isCollapsed()) {\n      handleChange(RichUtils.toggleBlockType(editorState, 'header-one'));\n    } else if (key === '*' && selection.isCollapsed()) {\n      handleChange(RichUtils.toggleInlineStyle(editorState, 'BOLD'));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Draft.js Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"Save\",\n        onClick: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      editorState: editorState,\n      onChange: handleChange,\n      handleKeyCommand: command => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n          handleChange(newState);\n          return 'handled';\n        }\n        return 'not-handled';\n      },\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TextEditor, \"BDlYKxJsbccXrtSF3huLTrOchnc=\");\n_c = TextEditor;\nexport default TextEditor;\nvar _c;\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["React","useState","useEffect","Editor","EditorState","convertToRaw","convertFromRaw","RichUtils","Button","jsxDEV","_jsxDEV","TextEditor","_s","editorState","setEditorState","savedContent","localStorage","getItem","contentState","JSON","parse","createWithContent","createEmpty","getCurrentContent","rawContentState","setItem","stringify","handleChange","newState","handleKeyPress","e","key","selection","getSelection","isCollapsed","toggleBlockType","toggleInlineStyle","children","className","fileName","_jsxFileName","lineNumber","columnNumber","label","onClick","onChange","handleKeyCommand","command","onKeyPress","_c","$RefreshReg$"],"sources":["C:/Users/udaym/OneDrive/Desktop/DraftJsEditor/basic-editor/src/TextEditor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Editor, EditorState, convertToRaw, convertFromRaw, RichUtils } from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\nimport Button from './compoButton';\r\n\r\nconst TextEditor = () => {\r\n  const [editorState, setEditorState] = useState(() => {\r\n    const savedContent = localStorage.getItem('draftContent');\r\n    if (savedContent) {\r\n      const contentState = convertFromRaw(JSON.parse(savedContent));\r\n      return EditorState.createWithContent(contentState);\r\n    } else {\r\n      return EditorState.createEmpty();\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const contentState = editorState.getCurrentContent();\r\n    const rawContentState = convertToRaw(contentState);\r\n    localStorage.setItem('draftContent', JSON.stringify(rawContentState));\r\n  }, [editorState]);\r\n\r\n  const handleChange = (newState) => {\r\n    setEditorState(newState);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    const { key } = e;\r\n    const contentState = editorState.getCurrentContent();\r\n    const selection = editorState.getSelection();\r\n\r\n    if (key === '#' && selection.isCollapsed()) {\r\n      handleChange(RichUtils.toggleBlockType(editorState, 'header-one'));\r\n    } else if (key === '*' && selection.isCollapsed()) {\r\n      handleChange(RichUtils.toggleInlineStyle(editorState, 'BOLD'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header-container\">\r\n        <h2>Draft.js Editor</h2>\r\n        <Button label=\"Save\" onClick={() => {}} />\r\n      </div>\r\n      <Editor\r\n        editorState={editorState}\r\n        onChange={handleChange}\r\n        handleKeyCommand={(command) => {\r\n          const newState = RichUtils.handleKeyCommand(editorState, command);\r\n          if (newState) {\r\n            handleChange(newState);\r\n            return 'handled';\r\n          }\r\n          return 'not-handled';\r\n        }}\r\n        onKeyPress={handleKeyPress}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
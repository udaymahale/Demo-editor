{"ast":null,"code":"/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { ensureSize, NOT_SET, wholeSlice, wrapIndex, resolveBegin, resolveEnd } from './TrieUtils.js';\nimport { KeyedCollection, Collection, IndexedCollection, SetCollection } from './Collection.js';\nimport { isCollection } from './predicates/isCollection.js';\nimport { isKeyed } from './predicates/isKeyed.js';\nimport { isIndexed } from './predicates/isIndexed.js';\nimport { IS_ORDERED_SYMBOL, isOrdered } from './predicates/isOrdered.js';\nimport { isSeq } from './predicates/isSeq.js';\nimport { ITERATE_VALUES, Iterator, iteratorValue, ITERATE_ENTRIES, ITERATE_KEYS, iteratorDone, getIterator } from './Iterator.js';\nimport { KeyedSeq, IndexedSeq, SetSeq, keyedSeqFromValue, indexedSeqFromValue, ArraySeq, Seq } from './Seq.js';\nimport { Map } from './Map.js';\nimport { OrderedMap } from './OrderedMap.js';\nvar ToKeyedSequence = /*@__PURE__*/function (KeyedSeq) {\n  function ToKeyedSequence(indexed, useKeys) {\n    this._iter = indexed;\n    this._useKeys = useKeys;\n    this.size = indexed.size;\n  }\n  if (KeyedSeq) ToKeyedSequence.__proto__ = KeyedSeq;\n  ToKeyedSequence.prototype = Object.create(KeyedSeq && KeyedSeq.prototype);\n  ToKeyedSequence.prototype.constructor = ToKeyedSequence;\n  ToKeyedSequence.prototype.get = function get(key, notSetValue) {\n    return this._iter.get(key, notSetValue);\n  };\n  ToKeyedSequence.prototype.has = function has(key) {\n    return this._iter.has(key);\n  };\n  ToKeyedSequence.prototype.valueSeq = function valueSeq() {\n    return this._iter.valueSeq();\n  };\n  ToKeyedSequence.prototype.reverse = function reverse() {\n    var this$1$1 = this;\n    var reversedSequence = reverseFactory(this, true);\n    if (!this._useKeys) {\n      reversedSequence.valueSeq = function () {\n        return this$1$1._iter.toSeq().reverse();\n      };\n    }\n    return reversedSequence;\n  };\n  ToKeyedSequence.prototype.map = function map(mapper, context) {\n    var this$1$1 = this;\n    var mappedSequence = mapFactory(this, mapper, context);\n    if (!this._useKeys) {\n      mappedSequence.valueSeq = function () {\n        return this$1$1._iter.toSeq().map(mapper, context);\n      };\n    }\n    return mappedSequence;\n  };\n  ToKeyedSequence.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1$1 = this;\n    return this._iter.__iterate(function (v, k) {\n      return fn(v, k, this$1$1);\n    }, reverse);\n  };\n  ToKeyedSequence.prototype.__iterator = function __iterator(type, reverse) {\n    return this._iter.__iterator(type, reverse);\n  };\n  return ToKeyedSequence;\n}(KeyedSeq);\nToKeyedSequence.prototype[IS_ORDERED_SYMBOL] = true;\nvar ToIndexedSequence = /*@__PURE__*/function (IndexedSeq) {\n  function ToIndexedSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n  if (IndexedSeq) ToIndexedSequence.__proto__ = IndexedSeq;\n  ToIndexedSequence.prototype = Object.create(IndexedSeq && IndexedSeq.prototype);\n  ToIndexedSequence.prototype.constructor = ToIndexedSequence;\n  ToIndexedSequence.prototype.includes = function includes(value) {\n    return this._iter.includes(value);\n  };\n  ToIndexedSequence.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1$1 = this;\n    var i = 0;\n    reverse && ensureSize(this);\n    return this._iter.__iterate(function (v) {\n      return fn(v, reverse ? this$1$1.size - ++i : i++, this$1$1);\n    }, reverse);\n  };\n  ToIndexedSequence.prototype.__iterator = function __iterator(type, reverse) {\n    var this$1$1 = this;\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    var i = 0;\n    reverse && ensureSize(this);\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, reverse ? this$1$1.size - ++i : i++, step.value, step);\n    });\n  };\n  return ToIndexedSequence;\n}(IndexedSeq);\nvar ToSetSequence = /*@__PURE__*/function (SetSeq) {\n  function ToSetSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n  if (SetSeq) ToSetSequence.__proto__ = SetSeq;\n  ToSetSequence.prototype = Object.create(SetSeq && SetSeq.prototype);\n  ToSetSequence.prototype.constructor = ToSetSequence;\n  ToSetSequence.prototype.has = function has(key) {\n    return this._iter.includes(key);\n  };\n  ToSetSequence.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1$1 = this;\n    return this._iter.__iterate(function (v) {\n      return fn(v, v, this$1$1);\n    }, reverse);\n  };\n  ToSetSequence.prototype.__iterator = function __iterator(type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, step.value, step.value, step);\n    });\n  };\n  return ToSetSequence;\n}(SetSeq);\nvar FromEntriesSequence = /*@__PURE__*/function (KeyedSeq) {\n  function FromEntriesSequence(entries) {\n    this._iter = entries;\n    this.size = entries.size;\n  }\n  if (KeyedSeq) FromEntriesSequence.__proto__ = KeyedSeq;\n  FromEntriesSequence.prototype = Object.create(KeyedSeq && KeyedSeq.prototype);\n  FromEntriesSequence.prototype.constructor = FromEntriesSequence;\n  FromEntriesSequence.prototype.entrySeq = function entrySeq() {\n    return this._iter.toSeq();\n  };\n  FromEntriesSequence.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1$1 = this;\n    return this._iter.__iterate(function (entry) {\n      // Check if entry exists first so array access doesn't throw for holes\n      // in the parent iteration.\n      if (entry) {\n        validateEntry(entry);\n        var indexedCollection = isCollection(entry);\n        return fn(indexedCollection ? entry.get(1) : entry[1], indexedCollection ? entry.get(0) : entry[0], this$1$1);\n      }\n    }, reverse);\n  };\n  FromEntriesSequence.prototype.__iterator = function __iterator(type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedCollection = isCollection(entry);\n          return iteratorValue(type, indexedCollection ? entry.get(0) : entry[0], indexedCollection ? entry.get(1) : entry[1], step);\n        }\n      }\n    });\n  };\n  return FromEntriesSequence;\n}(KeyedSeq);\nToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;\nfunction flipFactory(collection) {\n  var flipSequence = makeSequence(collection);\n  flipSequence._iter = collection;\n  flipSequence.size = collection.size;\n  flipSequence.flip = function () {\n    return collection;\n  };\n  flipSequence.reverse = function () {\n    var reversedSequence = collection.reverse.apply(this); // super.reverse()\n    reversedSequence.flip = function () {\n      return collection.reverse();\n    };\n    return reversedSequence;\n  };\n  flipSequence.has = function (key) {\n    return collection.includes(key);\n  };\n  flipSequence.includes = function (key) {\n    return collection.has(key);\n  };\n  flipSequence.cacheResult = cacheResultThrough;\n  flipSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n    return collection.__iterate(function (v, k) {\n      return fn(k, v, this$1$1) !== false;\n    }, reverse);\n  };\n  flipSequence.__iteratorUncached = function (type, reverse) {\n    if (type === ITERATE_ENTRIES) {\n      var iterator = collection.__iterator(type, reverse);\n      return new Iterator(function () {\n        var step = iterator.next();\n        if (!step.done) {\n          var k = step.value[0];\n          step.value[0] = step.value[1];\n          step.value[1] = k;\n        }\n        return step;\n      });\n    }\n    return collection.__iterator(type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES, reverse);\n  };\n  return flipSequence;\n}\nfunction mapFactory(collection, mapper, context) {\n  var mappedSequence = makeSequence(collection);\n  mappedSequence.size = collection.size;\n  mappedSequence.has = function (key) {\n    return collection.has(key);\n  };\n  mappedSequence.get = function (key, notSetValue) {\n    var v = collection.get(key, NOT_SET);\n    return v === NOT_SET ? notSetValue : mapper.call(context, v, key, collection);\n  };\n  mappedSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n    return collection.__iterate(function (v, k, c) {\n      return fn(mapper.call(context, v, k, c), k, this$1$1) !== false;\n    }, reverse);\n  };\n  mappedSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      var key = entry[0];\n      return iteratorValue(type, key, mapper.call(context, entry[1], key, collection), step);\n    });\n  };\n  return mappedSequence;\n}\nfunction reverseFactory(collection, useKeys) {\n  var this$1$1 = this;\n  var reversedSequence = makeSequence(collection);\n  reversedSequence._iter = collection;\n  reversedSequence.size = collection.size;\n  reversedSequence.reverse = function () {\n    return collection;\n  };\n  if (collection.flip) {\n    reversedSequence.flip = function () {\n      var flipSequence = flipFactory(collection);\n      flipSequence.reverse = function () {\n        return collection.flip();\n      };\n      return flipSequence;\n    };\n  }\n  reversedSequence.get = function (key, notSetValue) {\n    return collection.get(useKeys ? key : -1 - key, notSetValue);\n  };\n  reversedSequence.has = function (key) {\n    return collection.has(useKeys ? key : -1 - key);\n  };\n  reversedSequence.includes = function (value) {\n    return collection.includes(value);\n  };\n  reversedSequence.cacheResult = cacheResultThrough;\n  reversedSequence.__iterate = function (fn, reverse) {\n    var this$1$1 = this;\n    var i = 0;\n    reverse && ensureSize(collection);\n    return collection.__iterate(function (v, k) {\n      return fn(v, useKeys ? k : reverse ? this$1$1.size - ++i : i++, this$1$1);\n    }, !reverse);\n  };\n  reversedSequence.__iterator = function (type, reverse) {\n    var i = 0;\n    reverse && ensureSize(collection);\n    var iterator = collection.__iterator(ITERATE_ENTRIES, !reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      return iteratorValue(type, useKeys ? entry[0] : reverse ? this$1$1.size - ++i : i++, entry[1], step);\n    });\n  };\n  return reversedSequence;\n}\nfunction filterFactory(collection, predicate, context, useKeys) {\n  var filterSequence = makeSequence(collection);\n  if (useKeys) {\n    filterSequence.has = function (key) {\n      var v = collection.get(key, NOT_SET);\n      return v !== NOT_SET && !!predicate.call(context, v, key, collection);\n    };\n    filterSequence.get = function (key, notSetValue) {\n      var v = collection.get(key, NOT_SET);\n      return v !== NOT_SET && predicate.call(context, v, key, collection) ? v : notSetValue;\n    };\n  }\n  filterSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n    var iterations = 0;\n    collection.__iterate(function (v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1$1);\n      }\n    }, reverse);\n    return iterations;\n  };\n  filterSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var iterations = 0;\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        var value = entry[1];\n        if (predicate.call(context, value, key, collection)) {\n          return iteratorValue(type, useKeys ? key : iterations++, value, step);\n        }\n      }\n    });\n  };\n  return filterSequence;\n}\nfunction countByFactory(collection, grouper, context) {\n  var groups = Map().asMutable();\n  collection.__iterate(function (v, k) {\n    groups.update(grouper.call(context, v, k, collection), 0, function (a) {\n      return a + 1;\n    });\n  });\n  return groups.asImmutable();\n}\nfunction groupByFactory(collection, grouper, context) {\n  var isKeyedIter = isKeyed(collection);\n  var groups = (isOrdered(collection) ? OrderedMap() : Map()).asMutable();\n  collection.__iterate(function (v, k) {\n    groups.update(grouper.call(context, v, k, collection), function (a) {\n      return a = a || [], a.push(isKeyedIter ? [k, v] : v), a;\n    });\n  });\n  var coerce = collectionClass(collection);\n  return groups.map(function (arr) {\n    return reify(collection, coerce(arr));\n  }).asImmutable();\n}\nfunction partitionFactory(collection, predicate, context) {\n  var isKeyedIter = isKeyed(collection);\n  var groups = [[], []];\n  collection.__iterate(function (v, k) {\n    groups[predicate.call(context, v, k, collection) ? 1 : 0].push(isKeyedIter ? [k, v] : v);\n  });\n  var coerce = collectionClass(collection);\n  return groups.map(function (arr) {\n    return reify(collection, coerce(arr));\n  });\n}\nfunction sliceFactory(collection, begin, end, useKeys) {\n  var originalSize = collection.size;\n  if (wholeSlice(begin, end, originalSize)) {\n    return collection;\n  }\n  var resolvedBegin = resolveBegin(begin, originalSize);\n  var resolvedEnd = resolveEnd(end, originalSize);\n\n  // begin or end will be NaN if they were provided as negative numbers and\n  // this collection's size is unknown. In that case, cache first so there is\n  // a known size and these do not resolve to NaN.\n  if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n    return sliceFactory(collection.toSeq().cacheResult(), begin, end, useKeys);\n  }\n\n  // Note: resolvedEnd is undefined when the original sequence's length is\n  // unknown and this slice did not supply an end and should contain all\n  // elements after resolvedBegin.\n  // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n  var resolvedSize = resolvedEnd - resolvedBegin;\n  var sliceSize;\n  if (resolvedSize === resolvedSize) {\n    sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n  }\n  var sliceSeq = makeSequence(collection);\n\n  // If collection.size is undefined, the size of the realized sliceSeq is\n  // unknown at this point unless the number of items to slice is 0\n  sliceSeq.size = sliceSize === 0 ? sliceSize : collection.size && sliceSize || undefined;\n  if (!useKeys && isSeq(collection) && sliceSize >= 0) {\n    sliceSeq.get = function (index, notSetValue) {\n      index = wrapIndex(this, index);\n      return index >= 0 && index < sliceSize ? collection.get(index + resolvedBegin, notSetValue) : notSetValue;\n    };\n  }\n  sliceSeq.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n    if (sliceSize === 0) {\n      return 0;\n    }\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var skipped = 0;\n    var isSkipping = true;\n    var iterations = 0;\n    collection.__iterate(function (v, k) {\n      if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1$1) !== false && iterations !== sliceSize;\n      }\n    });\n    return iterations;\n  };\n  sliceSeq.__iteratorUncached = function (type, reverse) {\n    if (sliceSize !== 0 && reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    // Don't bother instantiating parent iterator if taking 0.\n    if (sliceSize === 0) {\n      return new Iterator(iteratorDone);\n    }\n    var iterator = collection.__iterator(type, reverse);\n    var skipped = 0;\n    var iterations = 0;\n    return new Iterator(function () {\n      while (skipped++ < resolvedBegin) {\n        iterator.next();\n      }\n      if (++iterations > sliceSize) {\n        return iteratorDone();\n      }\n      var step = iterator.next();\n      if (useKeys || type === ITERATE_VALUES || step.done) {\n        return step;\n      }\n      if (type === ITERATE_KEYS) {\n        return iteratorValue(type, iterations - 1, undefined, step);\n      }\n      return iteratorValue(type, iterations - 1, step.value[1], step);\n    });\n  };\n  return sliceSeq;\n}\nfunction takeWhileFactory(collection, predicate, context) {\n  var takeSequence = makeSequence(collection);\n  takeSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterations = 0;\n    collection.__iterate(function (v, k, c) {\n      return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$1$1);\n    });\n    return iterations;\n  };\n  takeSequence.__iteratorUncached = function (type, reverse) {\n    var this$1$1 = this;\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var iterating = true;\n    return new Iterator(function () {\n      if (!iterating) {\n        return iteratorDone();\n      }\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      var k = entry[0];\n      var v = entry[1];\n      if (!predicate.call(context, v, k, this$1$1)) {\n        iterating = false;\n        return iteratorDone();\n      }\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    });\n  };\n  return takeSequence;\n}\nfunction skipWhileFactory(collection, predicate, context, useKeys) {\n  var skipSequence = makeSequence(collection);\n  skipSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var isSkipping = true;\n    var iterations = 0;\n    collection.__iterate(function (v, k, c) {\n      if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1$1);\n      }\n    });\n    return iterations;\n  };\n  skipSequence.__iteratorUncached = function (type, reverse) {\n    var this$1$1 = this;\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var skipping = true;\n    var iterations = 0;\n    return new Iterator(function () {\n      var step;\n      var k;\n      var v;\n      do {\n        step = iterator.next();\n        if (step.done) {\n          if (useKeys || type === ITERATE_VALUES) {\n            return step;\n          }\n          if (type === ITERATE_KEYS) {\n            return iteratorValue(type, iterations++, undefined, step);\n          }\n          return iteratorValue(type, iterations++, step.value[1], step);\n        }\n        var entry = step.value;\n        k = entry[0];\n        v = entry[1];\n        skipping && (skipping = predicate.call(context, v, k, this$1$1));\n      } while (skipping);\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    });\n  };\n  return skipSequence;\n}\nfunction concatFactory(collection, values) {\n  var isKeyedCollection = isKeyed(collection);\n  var iters = [collection].concat(values).map(function (v) {\n    if (!isCollection(v)) {\n      v = isKeyedCollection ? keyedSeqFromValue(v) : indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n    } else if (isKeyedCollection) {\n      v = KeyedCollection(v);\n    }\n    return v;\n  }).filter(function (v) {\n    return v.size !== 0;\n  });\n  if (iters.length === 0) {\n    return collection;\n  }\n  if (iters.length === 1) {\n    var singleton = iters[0];\n    if (singleton === collection || isKeyedCollection && isKeyed(singleton) || isIndexed(collection) && isIndexed(singleton)) {\n      return singleton;\n    }\n  }\n  var concatSeq = new ArraySeq(iters);\n  if (isKeyedCollection) {\n    concatSeq = concatSeq.toKeyedSeq();\n  } else if (!isIndexed(collection)) {\n    concatSeq = concatSeq.toSetSeq();\n  }\n  concatSeq = concatSeq.flatten(true);\n  concatSeq.size = iters.reduce(function (sum, seq) {\n    if (sum !== undefined) {\n      var size = seq.size;\n      if (size !== undefined) {\n        return sum + size;\n      }\n    }\n  }, 0);\n  return concatSeq;\n}\nfunction flattenFactory(collection, depth, useKeys) {\n  var flatSequence = makeSequence(collection);\n  flatSequence.__iterateUncached = function (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterations = 0;\n    var stopped = false;\n    function flatDeep(iter, currentDepth) {\n      iter.__iterate(function (v, k) {\n        if ((!depth || currentDepth < depth) && isCollection(v)) {\n          flatDeep(v, currentDepth + 1);\n        } else {\n          iterations++;\n          if (fn(v, useKeys ? k : iterations - 1, flatSequence) === false) {\n            stopped = true;\n          }\n        }\n        return !stopped;\n      }, reverse);\n    }\n    flatDeep(collection, 0);\n    return iterations;\n  };\n  flatSequence.__iteratorUncached = function (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(type, reverse);\n    var stack = [];\n    var iterations = 0;\n    return new Iterator(function () {\n      while (iterator) {\n        var step = iterator.next();\n        if (step.done !== false) {\n          iterator = stack.pop();\n          continue;\n        }\n        var v = step.value;\n        if (type === ITERATE_ENTRIES) {\n          v = v[1];\n        }\n        if ((!depth || stack.length < depth) && isCollection(v)) {\n          stack.push(iterator);\n          iterator = v.__iterator(type, reverse);\n        } else {\n          return useKeys ? step : iteratorValue(type, iterations++, v, step);\n        }\n      }\n      return iteratorDone();\n    });\n  };\n  return flatSequence;\n}\nfunction flatMapFactory(collection, mapper, context) {\n  var coerce = collectionClass(collection);\n  return collection.toSeq().map(function (v, k) {\n    return coerce(mapper.call(context, v, k, collection));\n  }).flatten(true);\n}\nfunction interposeFactory(collection, separator) {\n  var interposedSequence = makeSequence(collection);\n  interposedSequence.size = collection.size && collection.size * 2 - 1;\n  interposedSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n    var iterations = 0;\n    collection.__iterate(function (v) {\n      return (!iterations || fn(separator, iterations++, this$1$1) !== false) && fn(v, iterations++, this$1$1) !== false;\n    }, reverse);\n    return iterations;\n  };\n  interposedSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_VALUES, reverse);\n    var iterations = 0;\n    var step;\n    return new Iterator(function () {\n      if (!step || iterations % 2) {\n        step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n      }\n      return iterations % 2 ? iteratorValue(type, iterations++, separator) : iteratorValue(type, iterations++, step.value, step);\n    });\n  };\n  return interposedSequence;\n}\nfunction sortFactory(collection, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n  var isKeyedCollection = isKeyed(collection);\n  var index = 0;\n  var entries = collection.toSeq().map(function (v, k) {\n    return [k, v, index++, mapper ? mapper(v, k, collection) : v];\n  }).valueSeq().toArray();\n  entries.sort(function (a, b) {\n    return comparator(a[3], b[3]) || a[2] - b[2];\n  }).forEach(isKeyedCollection ? function (v, i) {\n    entries[i].length = 2;\n  } : function (v, i) {\n    entries[i] = v[1];\n  });\n  return isKeyedCollection ? KeyedSeq(entries) : isIndexed(collection) ? IndexedSeq(entries) : SetSeq(entries);\n}\nfunction maxFactory(collection, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n  if (mapper) {\n    var entry = collection.toSeq().map(function (v, k) {\n      return [v, mapper(v, k, collection)];\n    }).reduce(function (a, b) {\n      return maxCompare(comparator, a[1], b[1]) ? b : a;\n    });\n    return entry && entry[0];\n  }\n  return collection.reduce(function (a, b) {\n    return maxCompare(comparator, a, b) ? b : a;\n  });\n}\nfunction maxCompare(comparator, a, b) {\n  var comp = comparator(b, a);\n  // b is considered the new max if the comparator declares them equal, but\n  // they are not equal and b is in fact a nullish value.\n  return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;\n}\nfunction zipWithFactory(keyIter, zipper, iters, zipAll) {\n  var zipSequence = makeSequence(keyIter);\n  var sizes = new ArraySeq(iters).map(function (i) {\n    return i.size;\n  });\n  zipSequence.size = zipAll ? sizes.max() : sizes.min();\n  // Note: this a generic base implementation of __iterate in terms of\n  // __iterator which may be more generically useful in the future.\n  zipSequence.__iterate = function (fn, reverse) {\n    /* generic:\n    var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n    var step;\n    var iterations = 0;\n    while (!(step = iterator.next()).done) {\n      iterations++;\n      if (fn(step.value[1], step.value[0], this) === false) {\n        break;\n      }\n    }\n    return iterations;\n    */\n    // indexed:\n    var iterator = this.__iterator(ITERATE_VALUES, reverse);\n    var step;\n    var iterations = 0;\n    while (!(step = iterator.next()).done) {\n      if (fn(step.value, iterations++, this) === false) {\n        break;\n      }\n    }\n    return iterations;\n  };\n  zipSequence.__iteratorUncached = function (type, reverse) {\n    var iterators = iters.map(function (i) {\n      return i = Collection(i), getIterator(reverse ? i.reverse() : i);\n    });\n    var iterations = 0;\n    var isDone = false;\n    return new Iterator(function () {\n      var steps;\n      if (!isDone) {\n        steps = iterators.map(function (i) {\n          return i.next();\n        });\n        isDone = zipAll ? steps.every(function (s) {\n          return s.done;\n        }) : steps.some(function (s) {\n          return s.done;\n        });\n      }\n      if (isDone) {\n        return iteratorDone();\n      }\n      return iteratorValue(type, iterations++, zipper.apply(null, steps.map(function (s) {\n        return s.value;\n      })));\n    });\n  };\n  return zipSequence;\n}\n\n// #pragma Helper Functions\n\nfunction reify(iter, seq) {\n  return iter === seq ? iter : isSeq(iter) ? seq : iter.constructor(seq);\n}\nfunction validateEntry(entry) {\n  if (entry !== Object(entry)) {\n    throw new TypeError('Expected [K, V] tuple: ' + entry);\n  }\n}\nfunction collectionClass(collection) {\n  return isKeyed(collection) ? KeyedCollection : isIndexed(collection) ? IndexedCollection : SetCollection;\n}\nfunction makeSequence(collection) {\n  return Object.create((isKeyed(collection) ? KeyedSeq : isIndexed(collection) ? IndexedSeq : SetSeq).prototype);\n}\nfunction cacheResultThrough() {\n  if (this._iter.cacheResult) {\n    this._iter.cacheResult();\n    this.size = this._iter.size;\n    return this;\n  }\n  return Seq.prototype.cacheResult.call(this);\n}\nfunction defaultComparator(a, b) {\n  if (a === undefined && b === undefined) {\n    return 0;\n  }\n  if (a === undefined) {\n    return 1;\n  }\n  if (b === undefined) {\n    return -1;\n  }\n  return a > b ? 1 : a < b ? -1 : 0;\n}\nexport { FromEntriesSequence, ToIndexedSequence, ToKeyedSequence, ToSetSequence, concatFactory, countByFactory, filterFactory, flatMapFactory, flattenFactory, flipFactory, groupByFactory, interposeFactory, mapFactory, maxFactory, partitionFactory, reify, reverseFactory, skipWhileFactory, sliceFactory, sortFactory, takeWhileFactory, zipWithFactory };","map":{"version":3,"names":["ensureSize","NOT_SET","wholeSlice","wrapIndex","resolveBegin","resolveEnd","KeyedCollection","Collection","IndexedCollection","SetCollection","isCollection","isKeyed","isIndexed","IS_ORDERED_SYMBOL","isOrdered","isSeq","ITERATE_VALUES","Iterator","iteratorValue","ITERATE_ENTRIES","ITERATE_KEYS","iteratorDone","getIterator","KeyedSeq","IndexedSeq","SetSeq","keyedSeqFromValue","indexedSeqFromValue","ArraySeq","Seq","Map","OrderedMap","ToKeyedSequence","indexed","useKeys","_iter","_useKeys","size","__proto__","prototype","Object","create","constructor","get","key","notSetValue","has","valueSeq","reverse","this$1$1","reversedSequence","reverseFactory","toSeq","map","mapper","context","mappedSequence","mapFactory","__iterate","fn","v","k","__iterator","type","ToIndexedSequence","iter","includes","value","i","iterator","step","next","done","ToSetSequence","FromEntriesSequence","entries","entrySeq","entry","validateEntry","indexedCollection","cacheResult","cacheResultThrough","flipFactory","collection","flipSequence","makeSequence","flip","apply","__iterateUncached","__iteratorUncached","call","c","filterFactory","predicate","filterSequence","iterations","countByFactory","grouper","groups","asMutable","update","a","asImmutable","groupByFactory","isKeyedIter","push","coerce","collectionClass","arr","reify","partitionFactory","sliceFactory","begin","end","originalSize","resolvedBegin","resolvedEnd","resolvedSize","sliceSize","sliceSeq","undefined","index","skipped","isSkipping","takeWhileFactory","takeSequence","iterating","skipWhileFactory","skipSequence","skipping","concatFactory","values","isKeyedCollection","iters","concat","Array","isArray","filter","length","singleton","concatSeq","toKeyedSeq","toSetSeq","flatten","reduce","sum","seq","flattenFactory","depth","flatSequence","stopped","flatDeep","currentDepth","stack","pop","flatMapFactory","interposeFactory","separator","interposedSequence","sortFactory","comparator","defaultComparator","toArray","sort","b","forEach","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","zipAll","zipSequence","sizes","max","min","iterators","isDone","steps","every","s","some","TypeError"],"sources":["C:/Users/udaym/OneDrive/Desktop/DraftJsEditor/node_modules/immutable/dist/es/Operations.js"],"sourcesContent":["/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { ensureSize, NOT_SET, wholeSlice, wrapIndex, resolveBegin, resolveEnd } from './TrieUtils.js';\nimport { KeyedCollection, Collection, IndexedCollection, SetCollection } from './Collection.js';\nimport { isCollection } from './predicates/isCollection.js';\nimport { isKeyed } from './predicates/isKeyed.js';\nimport { isIndexed } from './predicates/isIndexed.js';\nimport { IS_ORDERED_SYMBOL, isOrdered } from './predicates/isOrdered.js';\nimport { isSeq } from './predicates/isSeq.js';\nimport { ITERATE_VALUES, Iterator, iteratorValue, ITERATE_ENTRIES, ITERATE_KEYS, iteratorDone, getIterator } from './Iterator.js';\nimport { KeyedSeq, IndexedSeq, SetSeq, keyedSeqFromValue, indexedSeqFromValue, ArraySeq, Seq } from './Seq.js';\nimport { Map } from './Map.js';\nimport { OrderedMap } from './OrderedMap.js';\n\nvar ToKeyedSequence = /*@__PURE__*/(function (KeyedSeq) {\n  function ToKeyedSequence(indexed, useKeys) {\n    this._iter = indexed;\n    this._useKeys = useKeys;\n    this.size = indexed.size;\n  }\n\n  if ( KeyedSeq ) ToKeyedSequence.__proto__ = KeyedSeq;\n  ToKeyedSequence.prototype = Object.create( KeyedSeq && KeyedSeq.prototype );\n  ToKeyedSequence.prototype.constructor = ToKeyedSequence;\n\n  ToKeyedSequence.prototype.get = function get (key, notSetValue) {\n    return this._iter.get(key, notSetValue);\n  };\n\n  ToKeyedSequence.prototype.has = function has (key) {\n    return this._iter.has(key);\n  };\n\n  ToKeyedSequence.prototype.valueSeq = function valueSeq () {\n    return this._iter.valueSeq();\n  };\n\n  ToKeyedSequence.prototype.reverse = function reverse () {\n    var this$1$1 = this;\n\n    var reversedSequence = reverseFactory(this, true);\n    if (!this._useKeys) {\n      reversedSequence.valueSeq = function () { return this$1$1._iter.toSeq().reverse(); };\n    }\n    return reversedSequence;\n  };\n\n  ToKeyedSequence.prototype.map = function map (mapper, context) {\n    var this$1$1 = this;\n\n    var mappedSequence = mapFactory(this, mapper, context);\n    if (!this._useKeys) {\n      mappedSequence.valueSeq = function () { return this$1$1._iter.toSeq().map(mapper, context); };\n    }\n    return mappedSequence;\n  };\n\n  ToKeyedSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    return this._iter.__iterate(function (v, k) { return fn(v, k, this$1$1); }, reverse);\n  };\n\n  ToKeyedSequence.prototype.__iterator = function __iterator (type, reverse) {\n    return this._iter.__iterator(type, reverse);\n  };\n\n  return ToKeyedSequence;\n}(KeyedSeq));\nToKeyedSequence.prototype[IS_ORDERED_SYMBOL] = true;\n\nvar ToIndexedSequence = /*@__PURE__*/(function (IndexedSeq) {\n  function ToIndexedSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  if ( IndexedSeq ) ToIndexedSequence.__proto__ = IndexedSeq;\n  ToIndexedSequence.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );\n  ToIndexedSequence.prototype.constructor = ToIndexedSequence;\n\n  ToIndexedSequence.prototype.includes = function includes (value) {\n    return this._iter.includes(value);\n  };\n\n  ToIndexedSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    var i = 0;\n    reverse && ensureSize(this);\n    return this._iter.__iterate(\n      function (v) { return fn(v, reverse ? this$1$1.size - ++i : i++, this$1$1); },\n      reverse\n    );\n  };\n\n  ToIndexedSequence.prototype.__iterator = function __iterator (type, reverse) {\n    var this$1$1 = this;\n\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    var i = 0;\n    reverse && ensureSize(this);\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done\n        ? step\n        : iteratorValue(\n            type,\n            reverse ? this$1$1.size - ++i : i++,\n            step.value,\n            step\n          );\n    });\n  };\n\n  return ToIndexedSequence;\n}(IndexedSeq));\n\nvar ToSetSequence = /*@__PURE__*/(function (SetSeq) {\n  function ToSetSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  if ( SetSeq ) ToSetSequence.__proto__ = SetSeq;\n  ToSetSequence.prototype = Object.create( SetSeq && SetSeq.prototype );\n  ToSetSequence.prototype.constructor = ToSetSequence;\n\n  ToSetSequence.prototype.has = function has (key) {\n    return this._iter.includes(key);\n  };\n\n  ToSetSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    return this._iter.__iterate(function (v) { return fn(v, v, this$1$1); }, reverse);\n  };\n\n  ToSetSequence.prototype.__iterator = function __iterator (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done\n        ? step\n        : iteratorValue(type, step.value, step.value, step);\n    });\n  };\n\n  return ToSetSequence;\n}(SetSeq));\n\nvar FromEntriesSequence = /*@__PURE__*/(function (KeyedSeq) {\n  function FromEntriesSequence(entries) {\n    this._iter = entries;\n    this.size = entries.size;\n  }\n\n  if ( KeyedSeq ) FromEntriesSequence.__proto__ = KeyedSeq;\n  FromEntriesSequence.prototype = Object.create( KeyedSeq && KeyedSeq.prototype );\n  FromEntriesSequence.prototype.constructor = FromEntriesSequence;\n\n  FromEntriesSequence.prototype.entrySeq = function entrySeq () {\n    return this._iter.toSeq();\n  };\n\n  FromEntriesSequence.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    return this._iter.__iterate(function (entry) {\n      // Check if entry exists first so array access doesn't throw for holes\n      // in the parent iteration.\n      if (entry) {\n        validateEntry(entry);\n        var indexedCollection = isCollection(entry);\n        return fn(\n          indexedCollection ? entry.get(1) : entry[1],\n          indexedCollection ? entry.get(0) : entry[0],\n          this$1$1\n        );\n      }\n    }, reverse);\n  };\n\n  FromEntriesSequence.prototype.__iterator = function __iterator (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedCollection = isCollection(entry);\n          return iteratorValue(\n            type,\n            indexedCollection ? entry.get(0) : entry[0],\n            indexedCollection ? entry.get(1) : entry[1],\n            step\n          );\n        }\n      }\n    });\n  };\n\n  return FromEntriesSequence;\n}(KeyedSeq));\n\nToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\nfunction flipFactory(collection) {\n  var flipSequence = makeSequence(collection);\n  flipSequence._iter = collection;\n  flipSequence.size = collection.size;\n  flipSequence.flip = function () { return collection; };\n  flipSequence.reverse = function () {\n    var reversedSequence = collection.reverse.apply(this); // super.reverse()\n    reversedSequence.flip = function () { return collection.reverse(); };\n    return reversedSequence;\n  };\n  flipSequence.has = function (key) { return collection.includes(key); };\n  flipSequence.includes = function (key) { return collection.has(key); };\n  flipSequence.cacheResult = cacheResultThrough;\n  flipSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    return collection.__iterate(function (v, k) { return fn(k, v, this$1$1) !== false; }, reverse);\n  };\n  flipSequence.__iteratorUncached = function (type, reverse) {\n    if (type === ITERATE_ENTRIES) {\n      var iterator = collection.__iterator(type, reverse);\n      return new Iterator(function () {\n        var step = iterator.next();\n        if (!step.done) {\n          var k = step.value[0];\n          step.value[0] = step.value[1];\n          step.value[1] = k;\n        }\n        return step;\n      });\n    }\n    return collection.__iterator(\n      type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n      reverse\n    );\n  };\n  return flipSequence;\n}\n\nfunction mapFactory(collection, mapper, context) {\n  var mappedSequence = makeSequence(collection);\n  mappedSequence.size = collection.size;\n  mappedSequence.has = function (key) { return collection.has(key); };\n  mappedSequence.get = function (key, notSetValue) {\n    var v = collection.get(key, NOT_SET);\n    return v === NOT_SET\n      ? notSetValue\n      : mapper.call(context, v, key, collection);\n  };\n  mappedSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    return collection.__iterate(\n      function (v, k, c) { return fn(mapper.call(context, v, k, c), k, this$1$1) !== false; },\n      reverse\n    );\n  };\n  mappedSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      var key = entry[0];\n      return iteratorValue(\n        type,\n        key,\n        mapper.call(context, entry[1], key, collection),\n        step\n      );\n    });\n  };\n  return mappedSequence;\n}\n\nfunction reverseFactory(collection, useKeys) {\n  var this$1$1 = this;\n\n  var reversedSequence = makeSequence(collection);\n  reversedSequence._iter = collection;\n  reversedSequence.size = collection.size;\n  reversedSequence.reverse = function () { return collection; };\n  if (collection.flip) {\n    reversedSequence.flip = function () {\n      var flipSequence = flipFactory(collection);\n      flipSequence.reverse = function () { return collection.flip(); };\n      return flipSequence;\n    };\n  }\n  reversedSequence.get = function (key, notSetValue) { return collection.get(useKeys ? key : -1 - key, notSetValue); };\n  reversedSequence.has = function (key) { return collection.has(useKeys ? key : -1 - key); };\n  reversedSequence.includes = function (value) { return collection.includes(value); };\n  reversedSequence.cacheResult = cacheResultThrough;\n  reversedSequence.__iterate = function (fn, reverse) {\n    var this$1$1 = this;\n\n    var i = 0;\n    reverse && ensureSize(collection);\n    return collection.__iterate(\n      function (v, k) { return fn(v, useKeys ? k : reverse ? this$1$1.size - ++i : i++, this$1$1); },\n      !reverse\n    );\n  };\n  reversedSequence.__iterator = function (type, reverse) {\n    var i = 0;\n    reverse && ensureSize(collection);\n    var iterator = collection.__iterator(ITERATE_ENTRIES, !reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      return iteratorValue(\n        type,\n        useKeys ? entry[0] : reverse ? this$1$1.size - ++i : i++,\n        entry[1],\n        step\n      );\n    });\n  };\n  return reversedSequence;\n}\n\nfunction filterFactory(collection, predicate, context, useKeys) {\n  var filterSequence = makeSequence(collection);\n  if (useKeys) {\n    filterSequence.has = function (key) {\n      var v = collection.get(key, NOT_SET);\n      return v !== NOT_SET && !!predicate.call(context, v, key, collection);\n    };\n    filterSequence.get = function (key, notSetValue) {\n      var v = collection.get(key, NOT_SET);\n      return v !== NOT_SET && predicate.call(context, v, key, collection)\n        ? v\n        : notSetValue;\n    };\n  }\n  filterSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    var iterations = 0;\n    collection.__iterate(function (v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1$1);\n      }\n    }, reverse);\n    return iterations;\n  };\n  filterSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var iterations = 0;\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        var value = entry[1];\n        if (predicate.call(context, value, key, collection)) {\n          return iteratorValue(type, useKeys ? key : iterations++, value, step);\n        }\n      }\n    });\n  };\n  return filterSequence;\n}\n\nfunction countByFactory(collection, grouper, context) {\n  var groups = Map().asMutable();\n  collection.__iterate(function (v, k) {\n    groups.update(grouper.call(context, v, k, collection), 0, function (a) { return a + 1; });\n  });\n  return groups.asImmutable();\n}\n\nfunction groupByFactory(collection, grouper, context) {\n  var isKeyedIter = isKeyed(collection);\n  var groups = (isOrdered(collection) ? OrderedMap() : Map()).asMutable();\n  collection.__iterate(function (v, k) {\n    groups.update(\n      grouper.call(context, v, k, collection),\n      function (a) { return ((a = a || []), a.push(isKeyedIter ? [k, v] : v), a); }\n    );\n  });\n  var coerce = collectionClass(collection);\n  return groups.map(function (arr) { return reify(collection, coerce(arr)); }).asImmutable();\n}\n\nfunction partitionFactory(collection, predicate, context) {\n  var isKeyedIter = isKeyed(collection);\n  var groups = [[], []];\n  collection.__iterate(function (v, k) {\n    groups[predicate.call(context, v, k, collection) ? 1 : 0].push(\n      isKeyedIter ? [k, v] : v\n    );\n  });\n  var coerce = collectionClass(collection);\n  return groups.map(function (arr) { return reify(collection, coerce(arr)); });\n}\n\nfunction sliceFactory(collection, begin, end, useKeys) {\n  var originalSize = collection.size;\n\n  if (wholeSlice(begin, end, originalSize)) {\n    return collection;\n  }\n\n  var resolvedBegin = resolveBegin(begin, originalSize);\n  var resolvedEnd = resolveEnd(end, originalSize);\n\n  // begin or end will be NaN if they were provided as negative numbers and\n  // this collection's size is unknown. In that case, cache first so there is\n  // a known size and these do not resolve to NaN.\n  if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n    return sliceFactory(collection.toSeq().cacheResult(), begin, end, useKeys);\n  }\n\n  // Note: resolvedEnd is undefined when the original sequence's length is\n  // unknown and this slice did not supply an end and should contain all\n  // elements after resolvedBegin.\n  // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n  var resolvedSize = resolvedEnd - resolvedBegin;\n  var sliceSize;\n  if (resolvedSize === resolvedSize) {\n    sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n  }\n\n  var sliceSeq = makeSequence(collection);\n\n  // If collection.size is undefined, the size of the realized sliceSeq is\n  // unknown at this point unless the number of items to slice is 0\n  sliceSeq.size =\n    sliceSize === 0 ? sliceSize : (collection.size && sliceSize) || undefined;\n\n  if (!useKeys && isSeq(collection) && sliceSize >= 0) {\n    sliceSeq.get = function (index, notSetValue) {\n      index = wrapIndex(this, index);\n      return index >= 0 && index < sliceSize\n        ? collection.get(index + resolvedBegin, notSetValue)\n        : notSetValue;\n    };\n  }\n\n  sliceSeq.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    if (sliceSize === 0) {\n      return 0;\n    }\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var skipped = 0;\n    var isSkipping = true;\n    var iterations = 0;\n    collection.__iterate(function (v, k) {\n      if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n        iterations++;\n        return (\n          fn(v, useKeys ? k : iterations - 1, this$1$1) !== false &&\n          iterations !== sliceSize\n        );\n      }\n    });\n    return iterations;\n  };\n\n  sliceSeq.__iteratorUncached = function (type, reverse) {\n    if (sliceSize !== 0 && reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    // Don't bother instantiating parent iterator if taking 0.\n    if (sliceSize === 0) {\n      return new Iterator(iteratorDone);\n    }\n    var iterator = collection.__iterator(type, reverse);\n    var skipped = 0;\n    var iterations = 0;\n    return new Iterator(function () {\n      while (skipped++ < resolvedBegin) {\n        iterator.next();\n      }\n      if (++iterations > sliceSize) {\n        return iteratorDone();\n      }\n      var step = iterator.next();\n      if (useKeys || type === ITERATE_VALUES || step.done) {\n        return step;\n      }\n      if (type === ITERATE_KEYS) {\n        return iteratorValue(type, iterations - 1, undefined, step);\n      }\n      return iteratorValue(type, iterations - 1, step.value[1], step);\n    });\n  };\n\n  return sliceSeq;\n}\n\nfunction takeWhileFactory(collection, predicate, context) {\n  var takeSequence = makeSequence(collection);\n  takeSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterations = 0;\n    collection.__iterate(\n      function (v, k, c) { return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$1$1); }\n    );\n    return iterations;\n  };\n  takeSequence.__iteratorUncached = function (type, reverse) {\n    var this$1$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var iterating = true;\n    return new Iterator(function () {\n      if (!iterating) {\n        return iteratorDone();\n      }\n      var step = iterator.next();\n      if (step.done) {\n        return step;\n      }\n      var entry = step.value;\n      var k = entry[0];\n      var v = entry[1];\n      if (!predicate.call(context, v, k, this$1$1)) {\n        iterating = false;\n        return iteratorDone();\n      }\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    });\n  };\n  return takeSequence;\n}\n\nfunction skipWhileFactory(collection, predicate, context, useKeys) {\n  var skipSequence = makeSequence(collection);\n  skipSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var isSkipping = true;\n    var iterations = 0;\n    collection.__iterate(function (v, k, c) {\n      if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1$1);\n      }\n    });\n    return iterations;\n  };\n  skipSequence.__iteratorUncached = function (type, reverse) {\n    var this$1$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n    var skipping = true;\n    var iterations = 0;\n    return new Iterator(function () {\n      var step;\n      var k;\n      var v;\n      do {\n        step = iterator.next();\n        if (step.done) {\n          if (useKeys || type === ITERATE_VALUES) {\n            return step;\n          }\n          if (type === ITERATE_KEYS) {\n            return iteratorValue(type, iterations++, undefined, step);\n          }\n          return iteratorValue(type, iterations++, step.value[1], step);\n        }\n        var entry = step.value;\n        k = entry[0];\n        v = entry[1];\n        skipping && (skipping = predicate.call(context, v, k, this$1$1));\n      } while (skipping);\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    });\n  };\n  return skipSequence;\n}\n\nfunction concatFactory(collection, values) {\n  var isKeyedCollection = isKeyed(collection);\n  var iters = [collection]\n    .concat(values)\n    .map(function (v) {\n      if (!isCollection(v)) {\n        v = isKeyedCollection\n          ? keyedSeqFromValue(v)\n          : indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedCollection) {\n        v = KeyedCollection(v);\n      }\n      return v;\n    })\n    .filter(function (v) { return v.size !== 0; });\n\n  if (iters.length === 0) {\n    return collection;\n  }\n\n  if (iters.length === 1) {\n    var singleton = iters[0];\n    if (\n      singleton === collection ||\n      (isKeyedCollection && isKeyed(singleton)) ||\n      (isIndexed(collection) && isIndexed(singleton))\n    ) {\n      return singleton;\n    }\n  }\n\n  var concatSeq = new ArraySeq(iters);\n  if (isKeyedCollection) {\n    concatSeq = concatSeq.toKeyedSeq();\n  } else if (!isIndexed(collection)) {\n    concatSeq = concatSeq.toSetSeq();\n  }\n  concatSeq = concatSeq.flatten(true);\n  concatSeq.size = iters.reduce(function (sum, seq) {\n    if (sum !== undefined) {\n      var size = seq.size;\n      if (size !== undefined) {\n        return sum + size;\n      }\n    }\n  }, 0);\n  return concatSeq;\n}\n\nfunction flattenFactory(collection, depth, useKeys) {\n  var flatSequence = makeSequence(collection);\n  flatSequence.__iterateUncached = function (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterations = 0;\n    var stopped = false;\n    function flatDeep(iter, currentDepth) {\n      iter.__iterate(function (v, k) {\n        if ((!depth || currentDepth < depth) && isCollection(v)) {\n          flatDeep(v, currentDepth + 1);\n        } else {\n          iterations++;\n          if (fn(v, useKeys ? k : iterations - 1, flatSequence) === false) {\n            stopped = true;\n          }\n        }\n        return !stopped;\n      }, reverse);\n    }\n    flatDeep(collection, 0);\n    return iterations;\n  };\n  flatSequence.__iteratorUncached = function (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = collection.__iterator(type, reverse);\n    var stack = [];\n    var iterations = 0;\n    return new Iterator(function () {\n      while (iterator) {\n        var step = iterator.next();\n        if (step.done !== false) {\n          iterator = stack.pop();\n          continue;\n        }\n        var v = step.value;\n        if (type === ITERATE_ENTRIES) {\n          v = v[1];\n        }\n        if ((!depth || stack.length < depth) && isCollection(v)) {\n          stack.push(iterator);\n          iterator = v.__iterator(type, reverse);\n        } else {\n          return useKeys ? step : iteratorValue(type, iterations++, v, step);\n        }\n      }\n      return iteratorDone();\n    });\n  };\n  return flatSequence;\n}\n\nfunction flatMapFactory(collection, mapper, context) {\n  var coerce = collectionClass(collection);\n  return collection\n    .toSeq()\n    .map(function (v, k) { return coerce(mapper.call(context, v, k, collection)); })\n    .flatten(true);\n}\n\nfunction interposeFactory(collection, separator) {\n  var interposedSequence = makeSequence(collection);\n  interposedSequence.size = collection.size && collection.size * 2 - 1;\n  interposedSequence.__iterateUncached = function (fn, reverse) {\n    var this$1$1 = this;\n\n    var iterations = 0;\n    collection.__iterate(\n      function (v) { return (!iterations || fn(separator, iterations++, this$1$1) !== false) &&\n        fn(v, iterations++, this$1$1) !== false; },\n      reverse\n    );\n    return iterations;\n  };\n  interposedSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_VALUES, reverse);\n    var iterations = 0;\n    var step;\n    return new Iterator(function () {\n      if (!step || iterations % 2) {\n        step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n      }\n      return iterations % 2\n        ? iteratorValue(type, iterations++, separator)\n        : iteratorValue(type, iterations++, step.value, step);\n    });\n  };\n  return interposedSequence;\n}\n\nfunction sortFactory(collection, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n  var isKeyedCollection = isKeyed(collection);\n  var index = 0;\n  var entries = collection\n    .toSeq()\n    .map(function (v, k) { return [k, v, index++, mapper ? mapper(v, k, collection) : v]; })\n    .valueSeq()\n    .toArray();\n  entries\n    .sort(function (a, b) { return comparator(a[3], b[3]) || a[2] - b[2]; })\n    .forEach(\n      isKeyedCollection\n        ? function (v, i) {\n            entries[i].length = 2;\n          }\n        : function (v, i) {\n            entries[i] = v[1];\n          }\n    );\n  return isKeyedCollection\n    ? KeyedSeq(entries)\n    : isIndexed(collection)\n    ? IndexedSeq(entries)\n    : SetSeq(entries);\n}\n\nfunction maxFactory(collection, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n  if (mapper) {\n    var entry = collection\n      .toSeq()\n      .map(function (v, k) { return [v, mapper(v, k, collection)]; })\n      .reduce(function (a, b) { return (maxCompare(comparator, a[1], b[1]) ? b : a); });\n    return entry && entry[0];\n  }\n  return collection.reduce(function (a, b) { return (maxCompare(comparator, a, b) ? b : a); });\n}\n\nfunction maxCompare(comparator, a, b) {\n  var comp = comparator(b, a);\n  // b is considered the new max if the comparator declares them equal, but\n  // they are not equal and b is in fact a nullish value.\n  return (\n    (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) ||\n    comp > 0\n  );\n}\n\nfunction zipWithFactory(keyIter, zipper, iters, zipAll) {\n  var zipSequence = makeSequence(keyIter);\n  var sizes = new ArraySeq(iters).map(function (i) { return i.size; });\n  zipSequence.size = zipAll ? sizes.max() : sizes.min();\n  // Note: this a generic base implementation of __iterate in terms of\n  // __iterator which may be more generically useful in the future.\n  zipSequence.__iterate = function (fn, reverse) {\n    /* generic:\n    var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n    var step;\n    var iterations = 0;\n    while (!(step = iterator.next()).done) {\n      iterations++;\n      if (fn(step.value[1], step.value[0], this) === false) {\n        break;\n      }\n    }\n    return iterations;\n    */\n    // indexed:\n    var iterator = this.__iterator(ITERATE_VALUES, reverse);\n    var step;\n    var iterations = 0;\n    while (!(step = iterator.next()).done) {\n      if (fn(step.value, iterations++, this) === false) {\n        break;\n      }\n    }\n    return iterations;\n  };\n  zipSequence.__iteratorUncached = function (type, reverse) {\n    var iterators = iters.map(\n      function (i) { return ((i = Collection(i)), getIterator(reverse ? i.reverse() : i)); }\n    );\n    var iterations = 0;\n    var isDone = false;\n    return new Iterator(function () {\n      var steps;\n      if (!isDone) {\n        steps = iterators.map(function (i) { return i.next(); });\n        isDone = zipAll ? steps.every(function (s) { return s.done; }) : steps.some(function (s) { return s.done; });\n      }\n      if (isDone) {\n        return iteratorDone();\n      }\n      return iteratorValue(\n        type,\n        iterations++,\n        zipper.apply(\n          null,\n          steps.map(function (s) { return s.value; })\n        )\n      );\n    });\n  };\n  return zipSequence;\n}\n\n// #pragma Helper Functions\n\nfunction reify(iter, seq) {\n  return iter === seq ? iter : isSeq(iter) ? seq : iter.constructor(seq);\n}\n\nfunction validateEntry(entry) {\n  if (entry !== Object(entry)) {\n    throw new TypeError('Expected [K, V] tuple: ' + entry);\n  }\n}\n\nfunction collectionClass(collection) {\n  return isKeyed(collection)\n    ? KeyedCollection\n    : isIndexed(collection)\n    ? IndexedCollection\n    : SetCollection;\n}\n\nfunction makeSequence(collection) {\n  return Object.create(\n    (isKeyed(collection)\n      ? KeyedSeq\n      : isIndexed(collection)\n      ? IndexedSeq\n      : SetSeq\n    ).prototype\n  );\n}\n\nfunction cacheResultThrough() {\n  if (this._iter.cacheResult) {\n    this._iter.cacheResult();\n    this.size = this._iter.size;\n    return this;\n  }\n  return Seq.prototype.cacheResult.call(this);\n}\n\nfunction defaultComparator(a, b) {\n  if (a === undefined && b === undefined) {\n    return 0;\n  }\n\n  if (a === undefined) {\n    return 1;\n  }\n\n  if (b === undefined) {\n    return -1;\n  }\n\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\nexport { FromEntriesSequence, ToIndexedSequence, ToKeyedSequence, ToSetSequence, concatFactory, countByFactory, filterFactory, flatMapFactory, flattenFactory, flipFactory, groupByFactory, interposeFactory, mapFactory, maxFactory, partitionFactory, reify, reverseFactory, skipWhileFactory, sliceFactory, sortFactory, takeWhileFactory, zipWithFactory };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
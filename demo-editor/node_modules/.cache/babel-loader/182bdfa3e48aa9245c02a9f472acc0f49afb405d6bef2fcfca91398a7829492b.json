{"ast":null,"code":"/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n// Used for setting prototype methods that IE8 chokes on.\nvar DELETE = 'delete';\n\n// Constants describing the size of trie nodes.\nvar SHIFT = 5; // Resulted in best performance after ______?\nvar SIZE = 1 << SHIFT;\nvar MASK = SIZE - 1;\n\n// A consistent shared value representing \"not set\" which equals nothing other\n// than itself, and nothing that could be provided externally.\nvar NOT_SET = {};\n\n// Boolean references, Rough equivalent of `bool &`.\nfunction MakeRef() {\n  return {\n    value: false\n  };\n}\nfunction SetRef(ref) {\n  if (ref) {\n    ref.value = true;\n  }\n}\n\n// A function which returns a value representing an \"owner\" for transient writes\n// to tries. The return value will only ever equal itself, and will not equal\n// the return of any subsequent call of this function.\nfunction OwnerID() {}\nfunction ensureSize(iter) {\n  if (iter.size === undefined) {\n    iter.size = iter.__iterate(returnTrue);\n  }\n  return iter.size;\n}\nfunction wrapIndex(iter, index) {\n  // This implements \"is array index\" which the ECMAString spec defines as:\n  //\n  //     A String property name P is an array index if and only if\n  //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n  //     to 2^32−1.\n  //\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n  if (typeof index !== 'number') {\n    var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n    if ('' + uint32Index !== index || uint32Index === 4294967295) {\n      return NaN;\n    }\n    index = uint32Index;\n  }\n  return index < 0 ? ensureSize(iter) + index : index;\n}\nfunction returnTrue() {\n  return true;\n}\nfunction wholeSlice(begin, end, size) {\n  return (begin === 0 && !isNeg(begin) || size !== undefined && begin <= -size) && (end === undefined || size !== undefined && end >= size);\n}\nfunction resolveBegin(begin, size) {\n  return resolveIndex(begin, size, 0);\n}\nfunction resolveEnd(end, size) {\n  return resolveIndex(end, size, size);\n}\nfunction resolveIndex(index, size, defaultIndex) {\n  // Sanitize indices using this shorthand for ToInt32(argument)\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n  return index === undefined ? defaultIndex : isNeg(index) ? size === Infinity ? size : Math.max(0, size + index) | 0 : size === undefined || size === index ? index : Math.min(size, index) | 0;\n}\nfunction isNeg(value) {\n  // Account for -0 which is negative, but not less than 0.\n  return value < 0 || value === 0 && 1 / value === -Infinity;\n}\nexport { DELETE, MASK, MakeRef, NOT_SET, OwnerID, SHIFT, SIZE, SetRef, ensureSize, resolveBegin, resolveEnd, returnTrue, wholeSlice, wrapIndex };","map":{"version":3,"names":["DELETE","SHIFT","SIZE","MASK","NOT_SET","MakeRef","value","SetRef","ref","OwnerID","ensureSize","iter","size","undefined","__iterate","returnTrue","wrapIndex","index","uint32Index","NaN","wholeSlice","begin","end","isNeg","resolveBegin","resolveIndex","resolveEnd","defaultIndex","Infinity","Math","max","min"],"sources":["C:/Users/udaym/OneDrive/Desktop/DraftJsEditor/node_modules/immutable/dist/es/TrieUtils.js"],"sourcesContent":["/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n// Used for setting prototype methods that IE8 chokes on.\nvar DELETE = 'delete';\n\n// Constants describing the size of trie nodes.\nvar SHIFT = 5; // Resulted in best performance after ______?\nvar SIZE = 1 << SHIFT;\nvar MASK = SIZE - 1;\n\n// A consistent shared value representing \"not set\" which equals nothing other\n// than itself, and nothing that could be provided externally.\nvar NOT_SET = {};\n\n// Boolean references, Rough equivalent of `bool &`.\nfunction MakeRef() {\n  return { value: false };\n}\n\nfunction SetRef(ref) {\n  if (ref) {\n    ref.value = true;\n  }\n}\n\n// A function which returns a value representing an \"owner\" for transient writes\n// to tries. The return value will only ever equal itself, and will not equal\n// the return of any subsequent call of this function.\nfunction OwnerID() {}\n\nfunction ensureSize(iter) {\n  if (iter.size === undefined) {\n    iter.size = iter.__iterate(returnTrue);\n  }\n  return iter.size;\n}\n\nfunction wrapIndex(iter, index) {\n  // This implements \"is array index\" which the ECMAString spec defines as:\n  //\n  //     A String property name P is an array index if and only if\n  //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n  //     to 2^32−1.\n  //\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n  if (typeof index !== 'number') {\n    var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n    if ('' + uint32Index !== index || uint32Index === 4294967295) {\n      return NaN;\n    }\n    index = uint32Index;\n  }\n  return index < 0 ? ensureSize(iter) + index : index;\n}\n\nfunction returnTrue() {\n  return true;\n}\n\nfunction wholeSlice(begin, end, size) {\n  return (\n    ((begin === 0 && !isNeg(begin)) ||\n      (size !== undefined && begin <= -size)) &&\n    (end === undefined || (size !== undefined && end >= size))\n  );\n}\n\nfunction resolveBegin(begin, size) {\n  return resolveIndex(begin, size, 0);\n}\n\nfunction resolveEnd(end, size) {\n  return resolveIndex(end, size, size);\n}\n\nfunction resolveIndex(index, size, defaultIndex) {\n  // Sanitize indices using this shorthand for ToInt32(argument)\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n  return index === undefined\n    ? defaultIndex\n    : isNeg(index)\n    ? size === Infinity\n      ? size\n      : Math.max(0, size + index) | 0\n    : size === undefined || size === index\n    ? index\n    : Math.min(size, index) | 0;\n}\n\nfunction isNeg(value) {\n  // Account for -0 which is negative, but not less than 0.\n  return value < 0 || (value === 0 && 1 / value === -Infinity);\n}\n\nexport { DELETE, MASK, MakeRef, NOT_SET, OwnerID, SHIFT, SIZE, SetRef, ensureSize, resolveBegin, resolveEnd, returnTrue, wholeSlice, wrapIndex };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
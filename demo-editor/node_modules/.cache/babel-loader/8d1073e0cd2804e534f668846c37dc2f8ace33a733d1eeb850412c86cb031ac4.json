{"ast":null,"code":"/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { isImmutable } from '../predicates/isImmutable.js';\nimport coerceKeyPath from '../utils/coerceKeyPath.js';\nimport isDataStructure from '../utils/isDataStructure.js';\nimport quoteString from '../utils/quoteString.js';\nimport { NOT_SET } from '../TrieUtils.js';\nimport { emptyMap } from '../Map.js';\nimport { get } from './get.js';\nimport { remove } from './remove.js';\nimport { set } from './set.js';\nfunction updateIn(collection, keyPath, notSetValue, updater) {\n  if (!updater) {\n    updater = notSetValue;\n    notSetValue = undefined;\n  }\n  var updatedValue = updateInDeeply(isImmutable(collection), collection, coerceKeyPath(keyPath), 0, notSetValue, updater);\n  return updatedValue === NOT_SET ? notSetValue : updatedValue;\n}\nfunction updateInDeeply(inImmutable, existing, keyPath, i, notSetValue, updater) {\n  var wasNotSet = existing === NOT_SET;\n  if (i === keyPath.length) {\n    var existingValue = wasNotSet ? notSetValue : existing;\n    var newValue = updater(existingValue);\n    return newValue === existingValue ? existing : newValue;\n  }\n  if (!wasNotSet && !isDataStructure(existing)) {\n    throw new TypeError('Cannot update within non-data-structure value in path [' + keyPath.slice(0, i).map(quoteString) + ']: ' + existing);\n  }\n  var key = keyPath[i];\n  var nextExisting = wasNotSet ? NOT_SET : get(existing, key, NOT_SET);\n  var nextUpdated = updateInDeeply(nextExisting === NOT_SET ? inImmutable : isImmutable(nextExisting), nextExisting, keyPath, i + 1, notSetValue, updater);\n  return nextUpdated === nextExisting ? existing : nextUpdated === NOT_SET ? remove(existing, key) : set(wasNotSet ? inImmutable ? emptyMap() : {} : existing, key, nextUpdated);\n}\nexport { updateIn };","map":{"version":3,"names":["isImmutable","coerceKeyPath","isDataStructure","quoteString","NOT_SET","emptyMap","get","remove","set","updateIn","collection","keyPath","notSetValue","updater","undefined","updatedValue","updateInDeeply","inImmutable","existing","i","wasNotSet","length","existingValue","newValue","TypeError","slice","map","key","nextExisting","nextUpdated"],"sources":["C:/Users/udaym/OneDrive/Desktop/DraftJsEditor/node_modules/immutable/dist/es/functional/updateIn.js"],"sourcesContent":["/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { isImmutable } from '../predicates/isImmutable.js';\nimport coerceKeyPath from '../utils/coerceKeyPath.js';\nimport isDataStructure from '../utils/isDataStructure.js';\nimport quoteString from '../utils/quoteString.js';\nimport { NOT_SET } from '../TrieUtils.js';\nimport { emptyMap } from '../Map.js';\nimport { get } from './get.js';\nimport { remove } from './remove.js';\nimport { set } from './set.js';\n\nfunction updateIn(collection, keyPath, notSetValue, updater) {\n  if (!updater) {\n    updater = notSetValue;\n    notSetValue = undefined;\n  }\n  var updatedValue = updateInDeeply(\n    isImmutable(collection),\n    collection,\n    coerceKeyPath(keyPath),\n    0,\n    notSetValue,\n    updater\n  );\n  return updatedValue === NOT_SET ? notSetValue : updatedValue;\n}\n\nfunction updateInDeeply(\n  inImmutable,\n  existing,\n  keyPath,\n  i,\n  notSetValue,\n  updater\n) {\n  var wasNotSet = existing === NOT_SET;\n  if (i === keyPath.length) {\n    var existingValue = wasNotSet ? notSetValue : existing;\n    var newValue = updater(existingValue);\n    return newValue === existingValue ? existing : newValue;\n  }\n  if (!wasNotSet && !isDataStructure(existing)) {\n    throw new TypeError(\n      'Cannot update within non-data-structure value in path [' +\n        keyPath.slice(0, i).map(quoteString) +\n        ']: ' +\n        existing\n    );\n  }\n  var key = keyPath[i];\n  var nextExisting = wasNotSet ? NOT_SET : get(existing, key, NOT_SET);\n  var nextUpdated = updateInDeeply(\n    nextExisting === NOT_SET ? inImmutable : isImmutable(nextExisting),\n    nextExisting,\n    keyPath,\n    i + 1,\n    notSetValue,\n    updater\n  );\n  return nextUpdated === nextExisting\n    ? existing\n    : nextUpdated === NOT_SET\n    ? remove(existing, key)\n    : set(\n        wasNotSet ? (inImmutable ? emptyMap() : {}) : existing,\n        key,\n        nextUpdated\n      );\n}\n\nexport { updateIn };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAW,QAAQ,8BAA8B;AAC1D,OAAOC,aAAa,MAAM,2BAA2B;AACrD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,WAAW,MAAM,yBAAyB;AACjD,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,GAAG,QAAQ,UAAU;AAC9B,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,GAAG,QAAQ,UAAU;AAE9B,SAASC,QAAQA,CAACC,UAAU,EAAEC,OAAO,EAAEC,WAAW,EAAEC,OAAO,EAAE;EAC3D,IAAI,CAACA,OAAO,EAAE;IACZA,OAAO,GAAGD,WAAW;IACrBA,WAAW,GAAGE,SAAS;EACzB;EACA,IAAIC,YAAY,GAAGC,cAAc,CAC/BhB,WAAW,CAACU,UAAU,CAAC,EACvBA,UAAU,EACVT,aAAa,CAACU,OAAO,CAAC,EACtB,CAAC,EACDC,WAAW,EACXC,OACF,CAAC;EACD,OAAOE,YAAY,KAAKX,OAAO,GAAGQ,WAAW,GAAGG,YAAY;AAC9D;AAEA,SAASC,cAAcA,CACrBC,WAAW,EACXC,QAAQ,EACRP,OAAO,EACPQ,CAAC,EACDP,WAAW,EACXC,OAAO,EACP;EACA,IAAIO,SAAS,GAAGF,QAAQ,KAAKd,OAAO;EACpC,IAAIe,CAAC,KAAKR,OAAO,CAACU,MAAM,EAAE;IACxB,IAAIC,aAAa,GAAGF,SAAS,GAAGR,WAAW,GAAGM,QAAQ;IACtD,IAAIK,QAAQ,GAAGV,OAAO,CAACS,aAAa,CAAC;IACrC,OAAOC,QAAQ,KAAKD,aAAa,GAAGJ,QAAQ,GAAGK,QAAQ;EACzD;EACA,IAAI,CAACH,SAAS,IAAI,CAAClB,eAAe,CAACgB,QAAQ,CAAC,EAAE;IAC5C,MAAM,IAAIM,SAAS,CACjB,yDAAyD,GACvDb,OAAO,CAACc,KAAK,CAAC,CAAC,EAAEN,CAAC,CAAC,CAACO,GAAG,CAACvB,WAAW,CAAC,GACpC,KAAK,GACLe,QACJ,CAAC;EACH;EACA,IAAIS,GAAG,GAAGhB,OAAO,CAACQ,CAAC,CAAC;EACpB,IAAIS,YAAY,GAAGR,SAAS,GAAGhB,OAAO,GAAGE,GAAG,CAACY,QAAQ,EAAES,GAAG,EAAEvB,OAAO,CAAC;EACpE,IAAIyB,WAAW,GAAGb,cAAc,CAC9BY,YAAY,KAAKxB,OAAO,GAAGa,WAAW,GAAGjB,WAAW,CAAC4B,YAAY,CAAC,EAClEA,YAAY,EACZjB,OAAO,EACPQ,CAAC,GAAG,CAAC,EACLP,WAAW,EACXC,OACF,CAAC;EACD,OAAOgB,WAAW,KAAKD,YAAY,GAC/BV,QAAQ,GACRW,WAAW,KAAKzB,OAAO,GACvBG,MAAM,CAACW,QAAQ,EAAES,GAAG,CAAC,GACrBnB,GAAG,CACDY,SAAS,GAAIH,WAAW,GAAGZ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAIa,QAAQ,EACtDS,GAAG,EACHE,WACF,CAAC;AACP;AAEA,SAASpB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
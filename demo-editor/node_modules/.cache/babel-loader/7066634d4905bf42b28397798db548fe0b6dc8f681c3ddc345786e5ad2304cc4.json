{"ast":null,"code":"/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { wrapIndex, wholeSlice, resolveBegin, resolveEnd } from './TrieUtils.js';\nimport { IndexedCollection } from './Collection.js';\nimport { ArraySeq } from './Seq.js';\nimport { Iterator, iteratorValue, iteratorDone } from './Iterator.js';\nimport { isStack, IS_STACK_SYMBOL } from './predicates/isStack.js';\nimport assertNotInfinite from './utils/assertNotInfinite.js';\nimport { asImmutable } from './methods/asImmutable.js';\nimport { asMutable } from './methods/asMutable.js';\nimport { wasAltered } from './methods/wasAltered.js';\nimport { withMutations } from './methods/withMutations.js';\nvar Stack = /*@__PURE__*/function (IndexedCollection) {\n  function Stack(value) {\n    return value === undefined || value === null ? emptyStack() : isStack(value) ? value : emptyStack().pushAll(value);\n  }\n  if (IndexedCollection) Stack.__proto__ = IndexedCollection;\n  Stack.prototype = Object.create(IndexedCollection && IndexedCollection.prototype);\n  Stack.prototype.constructor = Stack;\n  Stack.of = function of( /*...values*/\n  ) {\n    return this(arguments);\n  };\n  Stack.prototype.toString = function toString() {\n    return this.__toString('Stack [', ']');\n  };\n\n  // @pragma Access\n\n  Stack.prototype.get = function get(index, notSetValue) {\n    var head = this._head;\n    index = wrapIndex(this, index);\n    while (head && index--) {\n      head = head.next;\n    }\n    return head ? head.value : notSetValue;\n  };\n  Stack.prototype.peek = function peek() {\n    return this._head && this._head.value;\n  };\n\n  // @pragma Modification\n\n  Stack.prototype.push = function push( /*...values*/\n  ) {\n    var arguments$1 = arguments;\n    if (arguments.length === 0) {\n      return this;\n    }\n    var newSize = this.size + arguments.length;\n    var head = this._head;\n    for (var ii = arguments.length - 1; ii >= 0; ii--) {\n      head = {\n        value: arguments$1[ii],\n        next: head\n      };\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n  Stack.prototype.pushAll = function pushAll(iter) {\n    iter = IndexedCollection(iter);\n    if (iter.size === 0) {\n      return this;\n    }\n    if (this.size === 0 && isStack(iter)) {\n      return iter;\n    }\n    assertNotInfinite(iter.size);\n    var newSize = this.size;\n    var head = this._head;\n    iter.__iterate(function (value) {\n      newSize++;\n      head = {\n        value: value,\n        next: head\n      };\n    }, /* reverse */true);\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n  Stack.prototype.pop = function pop() {\n    return this.slice(1);\n  };\n  Stack.prototype.clear = function clear() {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._head = undefined;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyStack();\n  };\n  Stack.prototype.slice = function slice(begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    var resolvedBegin = resolveBegin(begin, this.size);\n    var resolvedEnd = resolveEnd(end, this.size);\n    if (resolvedEnd !== this.size) {\n      // super.slice(begin, end);\n      return IndexedCollection.prototype.slice.call(this, begin, end);\n    }\n    var newSize = this.size - resolvedBegin;\n    var head = this._head;\n    while (resolvedBegin--) {\n      head = head.next;\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  // @pragma Mutability\n\n  Stack.prototype.__ensureOwner = function __ensureOwner(ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyStack();\n      }\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeStack(this.size, this._head, ownerID, this.__hash);\n  };\n\n  // @pragma Iteration\n\n  Stack.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1$1 = this;\n    if (reverse) {\n      return new ArraySeq(this.toArray()).__iterate(function (v, k) {\n        return fn(v, k, this$1$1);\n      }, reverse);\n    }\n    var iterations = 0;\n    var node = this._head;\n    while (node) {\n      if (fn(node.value, iterations++, this) === false) {\n        break;\n      }\n      node = node.next;\n    }\n    return iterations;\n  };\n  Stack.prototype.__iterator = function __iterator(type, reverse) {\n    if (reverse) {\n      return new ArraySeq(this.toArray()).__iterator(type, reverse);\n    }\n    var iterations = 0;\n    var node = this._head;\n    return new Iterator(function () {\n      if (node) {\n        var value = node.value;\n        node = node.next;\n        return iteratorValue(type, iterations++, value);\n      }\n      return iteratorDone();\n    });\n  };\n  return Stack;\n}(IndexedCollection);\nStack.isStack = isStack;\nvar StackPrototype = Stack.prototype;\nStackPrototype[IS_STACK_SYMBOL] = true;\nStackPrototype.shift = StackPrototype.pop;\nStackPrototype.unshift = StackPrototype.push;\nStackPrototype.unshiftAll = StackPrototype.pushAll;\nStackPrototype.withMutations = withMutations;\nStackPrototype.wasAltered = wasAltered;\nStackPrototype.asImmutable = asImmutable;\nStackPrototype['@@transducer/init'] = StackPrototype.asMutable = asMutable;\nStackPrototype['@@transducer/step'] = function (result, arr) {\n  return result.unshift(arr);\n};\nStackPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n};\nfunction makeStack(size, head, ownerID, hash) {\n  var map = Object.create(StackPrototype);\n  map.size = size;\n  map._head = head;\n  map.__ownerID = ownerID;\n  map.__hash = hash;\n  map.__altered = false;\n  return map;\n}\nvar EMPTY_STACK;\nfunction emptyStack() {\n  return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n}\nexport { Stack };","map":{"version":3,"names":["wrapIndex","wholeSlice","resolveBegin","resolveEnd","IndexedCollection","ArraySeq","Iterator","iteratorValue","iteratorDone","isStack","IS_STACK_SYMBOL","assertNotInfinite","asImmutable","asMutable","wasAltered","withMutations","Stack","value","undefined","emptyStack","pushAll","__proto__","prototype","Object","create","constructor","of","arguments","toString","__toString","get","index","notSetValue","head","_head","next","peek","push","arguments$1","length","newSize","size","ii","__ownerID","__hash","__altered","makeStack","iter","__iterate","pop","slice","clear","begin","end","resolvedBegin","resolvedEnd","call","__ensureOwner","ownerID","fn","reverse","this$1$1","toArray","v","k","iterations","node","__iterator","type","StackPrototype","shift","unshift","unshiftAll","result","arr","obj","hash","map","EMPTY_STACK"],"sources":["C:/Users/udaym/OneDrive/Desktop/DraftJsEditor/node_modules/immutable/dist/es/Stack.js"],"sourcesContent":["/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { wrapIndex, wholeSlice, resolveBegin, resolveEnd } from './TrieUtils.js';\nimport { IndexedCollection } from './Collection.js';\nimport { ArraySeq } from './Seq.js';\nimport { Iterator, iteratorValue, iteratorDone } from './Iterator.js';\nimport { isStack, IS_STACK_SYMBOL } from './predicates/isStack.js';\nimport assertNotInfinite from './utils/assertNotInfinite.js';\nimport { asImmutable } from './methods/asImmutable.js';\nimport { asMutable } from './methods/asMutable.js';\nimport { wasAltered } from './methods/wasAltered.js';\nimport { withMutations } from './methods/withMutations.js';\n\nvar Stack = /*@__PURE__*/(function (IndexedCollection) {\n  function Stack(value) {\n    return value === undefined || value === null\n      ? emptyStack()\n      : isStack(value)\n      ? value\n      : emptyStack().pushAll(value);\n  }\n\n  if ( IndexedCollection ) Stack.__proto__ = IndexedCollection;\n  Stack.prototype = Object.create( IndexedCollection && IndexedCollection.prototype );\n  Stack.prototype.constructor = Stack;\n\n  Stack.of = function of (/*...values*/) {\n    return this(arguments);\n  };\n\n  Stack.prototype.toString = function toString () {\n    return this.__toString('Stack [', ']');\n  };\n\n  // @pragma Access\n\n  Stack.prototype.get = function get (index, notSetValue) {\n    var head = this._head;\n    index = wrapIndex(this, index);\n    while (head && index--) {\n      head = head.next;\n    }\n    return head ? head.value : notSetValue;\n  };\n\n  Stack.prototype.peek = function peek () {\n    return this._head && this._head.value;\n  };\n\n  // @pragma Modification\n\n  Stack.prototype.push = function push (/*...values*/) {\n    var arguments$1 = arguments;\n\n    if (arguments.length === 0) {\n      return this;\n    }\n    var newSize = this.size + arguments.length;\n    var head = this._head;\n    for (var ii = arguments.length - 1; ii >= 0; ii--) {\n      head = {\n        value: arguments$1[ii],\n        next: head,\n      };\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pushAll = function pushAll (iter) {\n    iter = IndexedCollection(iter);\n    if (iter.size === 0) {\n      return this;\n    }\n    if (this.size === 0 && isStack(iter)) {\n      return iter;\n    }\n    assertNotInfinite(iter.size);\n    var newSize = this.size;\n    var head = this._head;\n    iter.__iterate(function (value) {\n      newSize++;\n      head = {\n        value: value,\n        next: head,\n      };\n    }, /* reverse */ true);\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pop = function pop () {\n    return this.slice(1);\n  };\n\n  Stack.prototype.clear = function clear () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._head = undefined;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyStack();\n  };\n\n  Stack.prototype.slice = function slice (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    var resolvedBegin = resolveBegin(begin, this.size);\n    var resolvedEnd = resolveEnd(end, this.size);\n    if (resolvedEnd !== this.size) {\n      // super.slice(begin, end);\n      return IndexedCollection.prototype.slice.call(this, begin, end);\n    }\n    var newSize = this.size - resolvedBegin;\n    var head = this._head;\n    while (resolvedBegin--) {\n      head = head.next;\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  // @pragma Mutability\n\n  Stack.prototype.__ensureOwner = function __ensureOwner (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyStack();\n      }\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeStack(this.size, this._head, ownerID, this.__hash);\n  };\n\n  // @pragma Iteration\n\n  Stack.prototype.__iterate = function __iterate (fn, reverse) {\n    var this$1$1 = this;\n\n    if (reverse) {\n      return new ArraySeq(this.toArray()).__iterate(\n        function (v, k) { return fn(v, k, this$1$1); },\n        reverse\n      );\n    }\n    var iterations = 0;\n    var node = this._head;\n    while (node) {\n      if (fn(node.value, iterations++, this) === false) {\n        break;\n      }\n      node = node.next;\n    }\n    return iterations;\n  };\n\n  Stack.prototype.__iterator = function __iterator (type, reverse) {\n    if (reverse) {\n      return new ArraySeq(this.toArray()).__iterator(type, reverse);\n    }\n    var iterations = 0;\n    var node = this._head;\n    return new Iterator(function () {\n      if (node) {\n        var value = node.value;\n        node = node.next;\n        return iteratorValue(type, iterations++, value);\n      }\n      return iteratorDone();\n    });\n  };\n\n  return Stack;\n}(IndexedCollection));\n\nStack.isStack = isStack;\n\nvar StackPrototype = Stack.prototype;\nStackPrototype[IS_STACK_SYMBOL] = true;\nStackPrototype.shift = StackPrototype.pop;\nStackPrototype.unshift = StackPrototype.push;\nStackPrototype.unshiftAll = StackPrototype.pushAll;\nStackPrototype.withMutations = withMutations;\nStackPrototype.wasAltered = wasAltered;\nStackPrototype.asImmutable = asImmutable;\nStackPrototype['@@transducer/init'] = StackPrototype.asMutable = asMutable;\nStackPrototype['@@transducer/step'] = function (result, arr) {\n  return result.unshift(arr);\n};\nStackPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n};\n\nfunction makeStack(size, head, ownerID, hash) {\n  var map = Object.create(StackPrototype);\n  map.size = size;\n  map._head = head;\n  map.__ownerID = ownerID;\n  map.__hash = hash;\n  map.__altered = false;\n  return map;\n}\n\nvar EMPTY_STACK;\nfunction emptyStack() {\n  return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n}\n\nexport { Stack };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { KeyedCollection } from '../Collection.js';\nimport { NOT_SET } from '../TrieUtils.js';\nimport { update } from '../functional/update.js';\nfunction merge() {\n  var iters = [],\n    len = arguments.length;\n  while (len--) iters[len] = arguments[len];\n  return mergeIntoKeyedWith(this, iters);\n}\nfunction mergeWith(merger) {\n  var iters = [],\n    len = arguments.length - 1;\n  while (len-- > 0) iters[len] = arguments[len + 1];\n  if (typeof merger !== 'function') {\n    throw new TypeError('Invalid merger function: ' + merger);\n  }\n  return mergeIntoKeyedWith(this, iters, merger);\n}\nfunction mergeIntoKeyedWith(collection, collections, merger) {\n  var iters = [];\n  for (var ii = 0; ii < collections.length; ii++) {\n    var collection$1 = KeyedCollection(collections[ii]);\n    if (collection$1.size !== 0) {\n      iters.push(collection$1);\n    }\n  }\n  if (iters.length === 0) {\n    return collection;\n  }\n  if (collection.toSeq().size === 0 && !collection.__ownerID && iters.length === 1) {\n    return collection.constructor(iters[0]);\n  }\n  return collection.withMutations(function (collection) {\n    var mergeIntoCollection = merger ? function (value, key) {\n      update(collection, key, NOT_SET, function (oldVal) {\n        return oldVal === NOT_SET ? value : merger(oldVal, value, key);\n      });\n    } : function (value, key) {\n      collection.set(key, value);\n    };\n    for (var ii = 0; ii < iters.length; ii++) {\n      iters[ii].forEach(mergeIntoCollection);\n    }\n  });\n}\nexport { merge, mergeWith };","map":{"version":3,"names":["KeyedCollection","NOT_SET","update","merge","iters","len","arguments","length","mergeIntoKeyedWith","mergeWith","merger","TypeError","collection","collections","ii","collection$1","size","push","toSeq","__ownerID","constructor","withMutations","mergeIntoCollection","value","key","oldVal","set","forEach"],"sources":["C:/Users/udaym/OneDrive/Desktop/DraftJsEditor/node_modules/immutable/dist/es/methods/merge.js"],"sourcesContent":["/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { KeyedCollection } from '../Collection.js';\nimport { NOT_SET } from '../TrieUtils.js';\nimport { update } from '../functional/update.js';\n\nfunction merge() {\n  var iters = [], len = arguments.length;\n  while ( len-- ) iters[ len ] = arguments[ len ];\n\n  return mergeIntoKeyedWith(this, iters);\n}\n\nfunction mergeWith(merger) {\n  var iters = [], len = arguments.length - 1;\n  while ( len-- > 0 ) iters[ len ] = arguments[ len + 1 ];\n\n  if (typeof merger !== 'function') {\n    throw new TypeError('Invalid merger function: ' + merger);\n  }\n  return mergeIntoKeyedWith(this, iters, merger);\n}\n\nfunction mergeIntoKeyedWith(collection, collections, merger) {\n  var iters = [];\n  for (var ii = 0; ii < collections.length; ii++) {\n    var collection$1 = KeyedCollection(collections[ii]);\n    if (collection$1.size !== 0) {\n      iters.push(collection$1);\n    }\n  }\n  if (iters.length === 0) {\n    return collection;\n  }\n  if (\n    collection.toSeq().size === 0 &&\n    !collection.__ownerID &&\n    iters.length === 1\n  ) {\n    return collection.constructor(iters[0]);\n  }\n  return collection.withMutations(function (collection) {\n    var mergeIntoCollection = merger\n      ? function (value, key) {\n          update(collection, key, NOT_SET, function (oldVal) { return oldVal === NOT_SET ? value : merger(oldVal, value, key); }\n          );\n        }\n      : function (value, key) {\n          collection.set(key, value);\n        };\n    for (var ii = 0; ii < iters.length; ii++) {\n      iters[ii].forEach(mergeIntoCollection);\n    }\n  });\n}\n\nexport { merge, mergeWith };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAe,QAAQ,kBAAkB;AAClD,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,MAAM,QAAQ,yBAAyB;AAEhD,SAASC,KAAKA,CAAA,EAAG;EACf,IAAIC,KAAK,GAAG,EAAE;IAAEC,GAAG,GAAGC,SAAS,CAACC,MAAM;EACtC,OAAQF,GAAG,EAAE,EAAGD,KAAK,CAAEC,GAAG,CAAE,GAAGC,SAAS,CAAED,GAAG,CAAE;EAE/C,OAAOG,kBAAkB,CAAC,IAAI,EAAEJ,KAAK,CAAC;AACxC;AAEA,SAASK,SAASA,CAACC,MAAM,EAAE;EACzB,IAAIN,KAAK,GAAG,EAAE;IAAEC,GAAG,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC;EAC1C,OAAQF,GAAG,EAAE,GAAG,CAAC,EAAGD,KAAK,CAAEC,GAAG,CAAE,GAAGC,SAAS,CAAED,GAAG,GAAG,CAAC,CAAE;EAEvD,IAAI,OAAOK,MAAM,KAAK,UAAU,EAAE;IAChC,MAAM,IAAIC,SAAS,CAAC,2BAA2B,GAAGD,MAAM,CAAC;EAC3D;EACA,OAAOF,kBAAkB,CAAC,IAAI,EAAEJ,KAAK,EAAEM,MAAM,CAAC;AAChD;AAEA,SAASF,kBAAkBA,CAACI,UAAU,EAAEC,WAAW,EAAEH,MAAM,EAAE;EAC3D,IAAIN,KAAK,GAAG,EAAE;EACd,KAAK,IAAIU,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGD,WAAW,CAACN,MAAM,EAAEO,EAAE,EAAE,EAAE;IAC9C,IAAIC,YAAY,GAAGf,eAAe,CAACa,WAAW,CAACC,EAAE,CAAC,CAAC;IACnD,IAAIC,YAAY,CAACC,IAAI,KAAK,CAAC,EAAE;MAC3BZ,KAAK,CAACa,IAAI,CAACF,YAAY,CAAC;IAC1B;EACF;EACA,IAAIX,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;IACtB,OAAOK,UAAU;EACnB;EACA,IACEA,UAAU,CAACM,KAAK,CAAC,CAAC,CAACF,IAAI,KAAK,CAAC,IAC7B,CAACJ,UAAU,CAACO,SAAS,IACrBf,KAAK,CAACG,MAAM,KAAK,CAAC,EAClB;IACA,OAAOK,UAAU,CAACQ,WAAW,CAAChB,KAAK,CAAC,CAAC,CAAC,CAAC;EACzC;EACA,OAAOQ,UAAU,CAACS,aAAa,CAAC,UAAUT,UAAU,EAAE;IACpD,IAAIU,mBAAmB,GAAGZ,MAAM,GAC5B,UAAUa,KAAK,EAAEC,GAAG,EAAE;MACpBtB,MAAM,CAACU,UAAU,EAAEY,GAAG,EAAEvB,OAAO,EAAE,UAAUwB,MAAM,EAAE;QAAE,OAAOA,MAAM,KAAKxB,OAAO,GAAGsB,KAAK,GAAGb,MAAM,CAACe,MAAM,EAAEF,KAAK,EAAEC,GAAG,CAAC;MAAE,CACrH,CAAC;IACH,CAAC,GACD,UAAUD,KAAK,EAAEC,GAAG,EAAE;MACpBZ,UAAU,CAACc,GAAG,CAACF,GAAG,EAAED,KAAK,CAAC;IAC5B,CAAC;IACL,KAAK,IAAIT,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGV,KAAK,CAACG,MAAM,EAAEO,EAAE,EAAE,EAAE;MACxCV,KAAK,CAACU,EAAE,CAAC,CAACa,OAAO,CAACL,mBAAmB,CAAC;IACxC;EACF,CAAC,CAAC;AACJ;AAEA,SAASnB,KAAK,EAAEM,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
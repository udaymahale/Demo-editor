{"ast":null,"code":"/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar ITERATE_KEYS = 0;\nvar ITERATE_VALUES = 1;\nvar ITERATE_ENTRIES = 2;\nvar REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nvar ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\nvar Iterator = function Iterator(next) {\n  this.next = next;\n};\nIterator.prototype.toString = function toString() {\n  return '[Iterator]';\n};\nIterator.KEYS = ITERATE_KEYS;\nIterator.VALUES = ITERATE_VALUES;\nIterator.ENTRIES = ITERATE_ENTRIES;\nIterator.prototype.inspect = Iterator.prototype.toSource = function () {\n  return this.toString();\n};\nIterator.prototype[ITERATOR_SYMBOL] = function () {\n  return this;\n};\nfunction iteratorValue(type, k, v, iteratorResult) {\n  var value = type === 0 ? k : type === 1 ? v : [k, v];\n  iteratorResult ? iteratorResult.value = value : iteratorResult = {\n    value: value,\n    done: false\n  };\n  return iteratorResult;\n}\nfunction iteratorDone() {\n  return {\n    value: undefined,\n    done: true\n  };\n}\nfunction hasIterator(maybeIterable) {\n  if (Array.isArray(maybeIterable)) {\n    // IE11 trick as it does not support `Symbol.iterator`\n    return true;\n  }\n  return !!getIteratorFn(maybeIterable);\n}\nfunction isIterator(maybeIterator) {\n  return maybeIterator && typeof maybeIterator.next === 'function';\n}\nfunction getIterator(iterable) {\n  var iteratorFn = getIteratorFn(iterable);\n  return iteratorFn && iteratorFn.call(iterable);\n}\nfunction getIteratorFn(iterable) {\n  var iteratorFn = iterable && (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || iterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\nfunction isEntriesIterable(maybeIterable) {\n  var iteratorFn = getIteratorFn(maybeIterable);\n  return iteratorFn && iteratorFn === maybeIterable.entries;\n}\nfunction isKeysIterable(maybeIterable) {\n  var iteratorFn = getIteratorFn(maybeIterable);\n  return iteratorFn && iteratorFn === maybeIterable.keys;\n}\nexport { ITERATE_ENTRIES, ITERATE_KEYS, ITERATE_VALUES, ITERATOR_SYMBOL, Iterator, getIterator, hasIterator, isEntriesIterable, isIterator, isKeysIterable, iteratorDone, iteratorValue };","map":{"version":3,"names":["ITERATE_KEYS","ITERATE_VALUES","ITERATE_ENTRIES","REAL_ITERATOR_SYMBOL","Symbol","iterator","FAUX_ITERATOR_SYMBOL","ITERATOR_SYMBOL","Iterator","next","prototype","toString","KEYS","VALUES","ENTRIES","inspect","toSource","iteratorValue","type","k","v","iteratorResult","value","done","iteratorDone","undefined","hasIterator","maybeIterable","Array","isArray","getIteratorFn","isIterator","maybeIterator","getIterator","iterable","iteratorFn","call","isEntriesIterable","entries","isKeysIterable","keys"],"sources":["C:/Users/udaym/OneDrive/Desktop/DraftJsEditor/node_modules/immutable/dist/es/Iterator.js"],"sourcesContent":["/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar ITERATE_KEYS = 0;\nvar ITERATE_VALUES = 1;\nvar ITERATE_ENTRIES = 2;\n\nvar REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nvar ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\nvar Iterator = function Iterator(next) {\n  this.next = next;\n};\n\nIterator.prototype.toString = function toString () {\n  return '[Iterator]';\n};\n\nIterator.KEYS = ITERATE_KEYS;\nIterator.VALUES = ITERATE_VALUES;\nIterator.ENTRIES = ITERATE_ENTRIES;\n\nIterator.prototype.inspect = Iterator.prototype.toSource = function () {\n  return this.toString();\n};\nIterator.prototype[ITERATOR_SYMBOL] = function () {\n  return this;\n};\n\nfunction iteratorValue(type, k, v, iteratorResult) {\n  var value = type === 0 ? k : type === 1 ? v : [k, v];\n  iteratorResult\n    ? (iteratorResult.value = value)\n    : (iteratorResult = {\n        value: value,\n        done: false,\n      });\n  return iteratorResult;\n}\n\nfunction iteratorDone() {\n  return { value: undefined, done: true };\n}\n\nfunction hasIterator(maybeIterable) {\n  if (Array.isArray(maybeIterable)) {\n    // IE11 trick as it does not support `Symbol.iterator`\n    return true;\n  }\n\n  return !!getIteratorFn(maybeIterable);\n}\n\nfunction isIterator(maybeIterator) {\n  return maybeIterator && typeof maybeIterator.next === 'function';\n}\n\nfunction getIterator(iterable) {\n  var iteratorFn = getIteratorFn(iterable);\n  return iteratorFn && iteratorFn.call(iterable);\n}\n\nfunction getIteratorFn(iterable) {\n  var iteratorFn =\n    iterable &&\n    ((REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nfunction isEntriesIterable(maybeIterable) {\n  var iteratorFn = getIteratorFn(maybeIterable);\n  return iteratorFn && iteratorFn === maybeIterable.entries;\n}\n\nfunction isKeysIterable(maybeIterable) {\n  var iteratorFn = getIteratorFn(maybeIterable);\n  return iteratorFn && iteratorFn === maybeIterable.keys;\n}\n\nexport { ITERATE_ENTRIES, ITERATE_KEYS, ITERATE_VALUES, ITERATOR_SYMBOL, Iterator, getIterator, hasIterator, isEntriesIterable, isIterator, isKeysIterable, iteratorDone, iteratorValue };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
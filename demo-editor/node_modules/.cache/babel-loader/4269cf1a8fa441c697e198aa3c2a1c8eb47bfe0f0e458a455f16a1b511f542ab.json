{"ast":null,"code":"/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { isImmutable } from '../predicates/isImmutable.js';\nimport { isIndexed } from '../predicates/isIndexed.js';\nimport { isKeyed } from '../predicates/isKeyed.js';\nimport { IndexedCollection, KeyedCollection } from '../Collection.js';\nimport { Seq } from '../Seq.js';\nimport hasOwnProperty from '../utils/hasOwnProperty.js';\nimport isDataStructure from '../utils/isDataStructure.js';\nimport shallowCopy from '../utils/shallowCopy.js';\nfunction merge(collection) {\n  var sources = [],\n    len = arguments.length - 1;\n  while (len-- > 0) sources[len] = arguments[len + 1];\n  return mergeWithSources(collection, sources);\n}\nfunction mergeWith(merger, collection) {\n  var sources = [],\n    len = arguments.length - 2;\n  while (len-- > 0) sources[len] = arguments[len + 2];\n  return mergeWithSources(collection, sources, merger);\n}\nfunction mergeDeep(collection) {\n  var sources = [],\n    len = arguments.length - 1;\n  while (len-- > 0) sources[len] = arguments[len + 1];\n  return mergeDeepWithSources(collection, sources);\n}\nfunction mergeDeepWith(merger, collection) {\n  var sources = [],\n    len = arguments.length - 2;\n  while (len-- > 0) sources[len] = arguments[len + 2];\n  return mergeDeepWithSources(collection, sources, merger);\n}\nfunction mergeDeepWithSources(collection, sources, merger) {\n  return mergeWithSources(collection, sources, deepMergerWith(merger));\n}\nfunction mergeWithSources(collection, sources, merger) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError('Cannot merge into non-data-structure value: ' + collection);\n  }\n  if (isImmutable(collection)) {\n    return typeof merger === 'function' && collection.mergeWith ? collection.mergeWith.apply(collection, [merger].concat(sources)) : collection.merge ? collection.merge.apply(collection, sources) : collection.concat.apply(collection, sources);\n  }\n  var isArray = Array.isArray(collection);\n  var merged = collection;\n  var Collection = isArray ? IndexedCollection : KeyedCollection;\n  var mergeItem = isArray ? function (value) {\n    // Copy on write\n    if (merged === collection) {\n      merged = shallowCopy(merged);\n    }\n    merged.push(value);\n  } : function (value, key) {\n    var hasVal = hasOwnProperty.call(merged, key);\n    var nextVal = hasVal && merger ? merger(merged[key], value, key) : value;\n    if (!hasVal || nextVal !== merged[key]) {\n      // Copy on write\n      if (merged === collection) {\n        merged = shallowCopy(merged);\n      }\n      merged[key] = nextVal;\n    }\n  };\n  for (var i = 0; i < sources.length; i++) {\n    Collection(sources[i]).forEach(mergeItem);\n  }\n  return merged;\n}\nfunction deepMergerWith(merger) {\n  function deepMerger(oldValue, newValue, key) {\n    return isDataStructure(oldValue) && isDataStructure(newValue) && areMergeable(oldValue, newValue) ? mergeWithSources(oldValue, [newValue], deepMerger) : merger ? merger(oldValue, newValue, key) : newValue;\n  }\n  return deepMerger;\n}\n\n/**\n * It's unclear what the desired behavior is for merging two collections that\n * fall into separate categories between keyed, indexed, or set-like, so we only\n * consider them mergeable if they fall into the same category.\n */\nfunction areMergeable(oldDataStructure, newDataStructure) {\n  var oldSeq = Seq(oldDataStructure);\n  var newSeq = Seq(newDataStructure);\n  // This logic assumes that a sequence can only fall into one of the three\n  // categories mentioned above (since there's no `isSetLike()` method).\n  return isIndexed(oldSeq) === isIndexed(newSeq) && isKeyed(oldSeq) === isKeyed(newSeq);\n}\nexport { merge, mergeDeep, mergeDeepWith, mergeDeepWithSources, mergeWith, mergeWithSources };","map":{"version":3,"names":["isImmutable","isIndexed","isKeyed","IndexedCollection","KeyedCollection","Seq","hasOwnProperty","isDataStructure","shallowCopy","merge","collection","sources","len","arguments","length","mergeWithSources","mergeWith","merger","mergeDeep","mergeDeepWithSources","mergeDeepWith","deepMergerWith","TypeError","apply","concat","isArray","Array","merged","Collection","mergeItem","value","push","key","hasVal","call","nextVal","i","forEach","deepMerger","oldValue","newValue","areMergeable","oldDataStructure","newDataStructure","oldSeq","newSeq"],"sources":["C:/Users/udaym/OneDrive/Desktop/DraftJsEditor/node_modules/immutable/dist/es/functional/merge.js"],"sourcesContent":["/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { isImmutable } from '../predicates/isImmutable.js';\nimport { isIndexed } from '../predicates/isIndexed.js';\nimport { isKeyed } from '../predicates/isKeyed.js';\nimport { IndexedCollection, KeyedCollection } from '../Collection.js';\nimport { Seq } from '../Seq.js';\nimport hasOwnProperty from '../utils/hasOwnProperty.js';\nimport isDataStructure from '../utils/isDataStructure.js';\nimport shallowCopy from '../utils/shallowCopy.js';\n\nfunction merge(collection) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  return mergeWithSources(collection, sources);\n}\n\nfunction mergeWith(merger, collection) {\n  var sources = [], len = arguments.length - 2;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 2 ];\n\n  return mergeWithSources(collection, sources, merger);\n}\n\nfunction mergeDeep(collection) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  return mergeDeepWithSources(collection, sources);\n}\n\nfunction mergeDeepWith(merger, collection) {\n  var sources = [], len = arguments.length - 2;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 2 ];\n\n  return mergeDeepWithSources(collection, sources, merger);\n}\n\nfunction mergeDeepWithSources(collection, sources, merger) {\n  return mergeWithSources(collection, sources, deepMergerWith(merger));\n}\n\nfunction mergeWithSources(collection, sources, merger) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError(\n      'Cannot merge into non-data-structure value: ' + collection\n    );\n  }\n  if (isImmutable(collection)) {\n    return typeof merger === 'function' && collection.mergeWith\n      ? collection.mergeWith.apply(collection, [ merger ].concat( sources ))\n      : collection.merge\n      ? collection.merge.apply(collection, sources)\n      : collection.concat.apply(collection, sources);\n  }\n  var isArray = Array.isArray(collection);\n  var merged = collection;\n  var Collection = isArray ? IndexedCollection : KeyedCollection;\n  var mergeItem = isArray\n    ? function (value) {\n        // Copy on write\n        if (merged === collection) {\n          merged = shallowCopy(merged);\n        }\n        merged.push(value);\n      }\n    : function (value, key) {\n        var hasVal = hasOwnProperty.call(merged, key);\n        var nextVal =\n          hasVal && merger ? merger(merged[key], value, key) : value;\n        if (!hasVal || nextVal !== merged[key]) {\n          // Copy on write\n          if (merged === collection) {\n            merged = shallowCopy(merged);\n          }\n          merged[key] = nextVal;\n        }\n      };\n  for (var i = 0; i < sources.length; i++) {\n    Collection(sources[i]).forEach(mergeItem);\n  }\n  return merged;\n}\n\nfunction deepMergerWith(merger) {\n  function deepMerger(oldValue, newValue, key) {\n    return isDataStructure(oldValue) &&\n      isDataStructure(newValue) &&\n      areMergeable(oldValue, newValue)\n      ? mergeWithSources(oldValue, [newValue], deepMerger)\n      : merger\n      ? merger(oldValue, newValue, key)\n      : newValue;\n  }\n  return deepMerger;\n}\n\n/**\n * It's unclear what the desired behavior is for merging two collections that\n * fall into separate categories between keyed, indexed, or set-like, so we only\n * consider them mergeable if they fall into the same category.\n */\nfunction areMergeable(oldDataStructure, newDataStructure) {\n  var oldSeq = Seq(oldDataStructure);\n  var newSeq = Seq(newDataStructure);\n  // This logic assumes that a sequence can only fall into one of the three\n  // categories mentioned above (since there's no `isSetLike()` method).\n  return (\n    isIndexed(oldSeq) === isIndexed(newSeq) &&\n    isKeyed(oldSeq) === isKeyed(newSeq)\n  );\n}\n\nexport { merge, mergeDeep, mergeDeepWith, mergeDeepWithSources, mergeWith, mergeWithSources };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
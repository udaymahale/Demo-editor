{"ast":null,"code":"/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { wrapIndex, wholeSlice, resolveBegin, resolveEnd } from './TrieUtils.js';\nimport { IndexedSeq } from './Seq.js';\nimport { Iterator, iteratorDone, iteratorValue } from './Iterator.js';\nimport invariant from './utils/invariant.js';\nimport deepEqual from './utils/deepEqual.js';\n\n/**\n * Returns a lazy seq of nums from start (inclusive) to end\n * (exclusive), by step, where start defaults to 0, step to 1, and end to\n * infinity. When start is equal to end, returns empty list.\n */\nvar Range = /*@__PURE__*/function (IndexedSeq) {\n  function Range(start, end, step) {\n    if (step === void 0) step = 1;\n    if (!(this instanceof Range)) {\n      return new Range(start, end, step);\n    }\n    invariant(step !== 0, 'Cannot step a Range by 0');\n    invariant(start !== undefined, 'You must define a start value when using Range');\n    invariant(end !== undefined, 'You must define an end value when using Range');\n    step = Math.abs(step);\n    if (end < start) {\n      step = -step;\n    }\n    this._start = start;\n    this._end = end;\n    this._step = step;\n    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n    if (this.size === 0) {\n      if (EMPTY_RANGE) {\n        return EMPTY_RANGE;\n      }\n      EMPTY_RANGE = this;\n    }\n  }\n  if (IndexedSeq) Range.__proto__ = IndexedSeq;\n  Range.prototype = Object.create(IndexedSeq && IndexedSeq.prototype);\n  Range.prototype.constructor = Range;\n  Range.prototype.toString = function toString() {\n    if (this.size === 0) {\n      return 'Range []';\n    }\n    return 'Range [ ' + this._start + '...' + this._end + (this._step !== 1 ? ' by ' + this._step : '') + ' ]';\n  };\n  Range.prototype.get = function get(index, notSetValue) {\n    return this.has(index) ? this._start + wrapIndex(this, index) * this._step : notSetValue;\n  };\n  Range.prototype.includes = function includes(searchValue) {\n    var possibleIndex = (searchValue - this._start) / this._step;\n    return possibleIndex >= 0 && possibleIndex < this.size && possibleIndex === Math.floor(possibleIndex);\n  };\n  Range.prototype.slice = function slice(begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    begin = resolveBegin(begin, this.size);\n    end = resolveEnd(end, this.size);\n    if (end <= begin) {\n      return new Range(0, 0);\n    }\n    return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n  };\n  Range.prototype.indexOf = function indexOf(searchValue) {\n    var offsetValue = searchValue - this._start;\n    if (offsetValue % this._step === 0) {\n      var index = offsetValue / this._step;\n      if (index >= 0 && index < this.size) {\n        return index;\n      }\n    }\n    return -1;\n  };\n  Range.prototype.lastIndexOf = function lastIndexOf(searchValue) {\n    return this.indexOf(searchValue);\n  };\n  Range.prototype.__iterate = function __iterate(fn, reverse) {\n    var size = this.size;\n    var step = this._step;\n    var value = reverse ? this._start + (size - 1) * step : this._start;\n    var i = 0;\n    while (i !== size) {\n      if (fn(value, reverse ? size - ++i : i++, this) === false) {\n        break;\n      }\n      value += reverse ? -step : step;\n    }\n    return i;\n  };\n  Range.prototype.__iterator = function __iterator(type, reverse) {\n    var size = this.size;\n    var step = this._step;\n    var value = reverse ? this._start + (size - 1) * step : this._start;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n      var v = value;\n      value += reverse ? -step : step;\n      return iteratorValue(type, reverse ? size - ++i : i++, v);\n    });\n  };\n  Range.prototype.equals = function equals(other) {\n    return other instanceof Range ? this._start === other._start && this._end === other._end && this._step === other._step : deepEqual(this, other);\n  };\n  return Range;\n}(IndexedSeq);\nvar EMPTY_RANGE;\nexport { Range };","map":{"version":3,"names":["wrapIndex","wholeSlice","resolveBegin","resolveEnd","IndexedSeq","Iterator","iteratorDone","iteratorValue","invariant","deepEqual","Range","start","end","step","undefined","Math","abs","_start","_end","_step","size","max","ceil","EMPTY_RANGE","__proto__","prototype","Object","create","constructor","toString","get","index","notSetValue","has","includes","searchValue","possibleIndex","floor","slice","begin","indexOf","offsetValue","lastIndexOf","__iterate","fn","reverse","value","i","__iterator","type","v","equals","other"],"sources":["C:/Users/udaym/OneDrive/Desktop/DraftJsEditor/node_modules/immutable/dist/es/Range.js"],"sourcesContent":["/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { wrapIndex, wholeSlice, resolveBegin, resolveEnd } from './TrieUtils.js';\nimport { IndexedSeq } from './Seq.js';\nimport { Iterator, iteratorDone, iteratorValue } from './Iterator.js';\nimport invariant from './utils/invariant.js';\nimport deepEqual from './utils/deepEqual.js';\n\n/**\n * Returns a lazy seq of nums from start (inclusive) to end\n * (exclusive), by step, where start defaults to 0, step to 1, and end to\n * infinity. When start is equal to end, returns empty list.\n */\nvar Range = /*@__PURE__*/(function (IndexedSeq) {\n  function Range(start, end, step) {\n    if ( step === void 0 ) step = 1;\n\n    if (!(this instanceof Range)) {\n      return new Range(start, end, step);\n    }\n    invariant(step !== 0, 'Cannot step a Range by 0');\n    invariant(\n      start !== undefined,\n      'You must define a start value when using Range'\n    );\n    invariant(\n      end !== undefined,\n      'You must define an end value when using Range'\n    );\n\n    step = Math.abs(step);\n    if (end < start) {\n      step = -step;\n    }\n    this._start = start;\n    this._end = end;\n    this._step = step;\n    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n    if (this.size === 0) {\n      if (EMPTY_RANGE) {\n        return EMPTY_RANGE;\n      }\n      EMPTY_RANGE = this;\n    }\n  }\n\n  if ( IndexedSeq ) Range.__proto__ = IndexedSeq;\n  Range.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );\n  Range.prototype.constructor = Range;\n\n  Range.prototype.toString = function toString () {\n    if (this.size === 0) {\n      return 'Range []';\n    }\n    return (\n      'Range [ ' +\n      this._start +\n      '...' +\n      this._end +\n      (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]'\n    );\n  };\n\n  Range.prototype.get = function get (index, notSetValue) {\n    return this.has(index)\n      ? this._start + wrapIndex(this, index) * this._step\n      : notSetValue;\n  };\n\n  Range.prototype.includes = function includes (searchValue) {\n    var possibleIndex = (searchValue - this._start) / this._step;\n    return (\n      possibleIndex >= 0 &&\n      possibleIndex < this.size &&\n      possibleIndex === Math.floor(possibleIndex)\n    );\n  };\n\n  Range.prototype.slice = function slice (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    begin = resolveBegin(begin, this.size);\n    end = resolveEnd(end, this.size);\n    if (end <= begin) {\n      return new Range(0, 0);\n    }\n    return new Range(\n      this.get(begin, this._end),\n      this.get(end, this._end),\n      this._step\n    );\n  };\n\n  Range.prototype.indexOf = function indexOf (searchValue) {\n    var offsetValue = searchValue - this._start;\n    if (offsetValue % this._step === 0) {\n      var index = offsetValue / this._step;\n      if (index >= 0 && index < this.size) {\n        return index;\n      }\n    }\n    return -1;\n  };\n\n  Range.prototype.lastIndexOf = function lastIndexOf (searchValue) {\n    return this.indexOf(searchValue);\n  };\n\n  Range.prototype.__iterate = function __iterate (fn, reverse) {\n    var size = this.size;\n    var step = this._step;\n    var value = reverse ? this._start + (size - 1) * step : this._start;\n    var i = 0;\n    while (i !== size) {\n      if (fn(value, reverse ? size - ++i : i++, this) === false) {\n        break;\n      }\n      value += reverse ? -step : step;\n    }\n    return i;\n  };\n\n  Range.prototype.__iterator = function __iterator (type, reverse) {\n    var size = this.size;\n    var step = this._step;\n    var value = reverse ? this._start + (size - 1) * step : this._start;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n      var v = value;\n      value += reverse ? -step : step;\n      return iteratorValue(type, reverse ? size - ++i : i++, v);\n    });\n  };\n\n  Range.prototype.equals = function equals (other) {\n    return other instanceof Range\n      ? this._start === other._start &&\n          this._end === other._end &&\n          this._step === other._step\n      : deepEqual(this, other);\n  };\n\n  return Range;\n}(IndexedSeq));\n\nvar EMPTY_RANGE;\n\nexport { Range };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
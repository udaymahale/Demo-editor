{"ast":null,"code":"/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { Seq } from './Seq.js';\nimport { hasIterator } from './Iterator.js';\nimport { isImmutable } from './predicates/isImmutable.js';\nimport { isIndexed } from './predicates/isIndexed.js';\nimport { isKeyed } from './predicates/isKeyed.js';\nimport isArrayLike from './utils/isArrayLike.js';\nimport isPlainObject from './utils/isPlainObj.js';\nfunction fromJS(value, converter) {\n  return fromJSWith([], converter || defaultConverter, value, '', converter && converter.length > 2 ? [] : undefined, {\n    '': value\n  });\n}\nfunction fromJSWith(stack, converter, value, key, keyPath, parentValue) {\n  if (typeof value !== 'string' && !isImmutable(value) && (isArrayLike(value) || hasIterator(value) || isPlainObject(value))) {\n    if (~stack.indexOf(value)) {\n      throw new TypeError('Cannot convert circular structure to Immutable');\n    }\n    stack.push(value);\n    keyPath && key !== '' && keyPath.push(key);\n    var converted = converter.call(parentValue, key, Seq(value).map(function (v, k) {\n      return fromJSWith(stack, converter, v, k, keyPath, value);\n    }), keyPath && keyPath.slice());\n    stack.pop();\n    keyPath && keyPath.pop();\n    return converted;\n  }\n  return value;\n}\nfunction defaultConverter(k, v) {\n  // Effectively the opposite of \"Collection.toSeq()\"\n  return isIndexed(v) ? v.toList() : isKeyed(v) ? v.toMap() : v.toSet();\n}\nexport { fromJS };","map":{"version":3,"names":["Seq","hasIterator","isImmutable","isIndexed","isKeyed","isArrayLike","isPlainObject","fromJS","value","converter","fromJSWith","defaultConverter","length","undefined","stack","key","keyPath","parentValue","indexOf","TypeError","push","converted","call","map","v","k","slice","pop","toList","toMap","toSet"],"sources":["C:/Users/udaym/OneDrive/Desktop/DraftJsEditor/node_modules/immutable/dist/es/fromJS.js"],"sourcesContent":["/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { Seq } from './Seq.js';\nimport { hasIterator } from './Iterator.js';\nimport { isImmutable } from './predicates/isImmutable.js';\nimport { isIndexed } from './predicates/isIndexed.js';\nimport { isKeyed } from './predicates/isKeyed.js';\nimport isArrayLike from './utils/isArrayLike.js';\nimport isPlainObject from './utils/isPlainObj.js';\n\nfunction fromJS(value, converter) {\n  return fromJSWith(\n    [],\n    converter || defaultConverter,\n    value,\n    '',\n    converter && converter.length > 2 ? [] : undefined,\n    { '': value }\n  );\n}\n\nfunction fromJSWith(stack, converter, value, key, keyPath, parentValue) {\n  if (\n    typeof value !== 'string' &&\n    !isImmutable(value) &&\n    (isArrayLike(value) || hasIterator(value) || isPlainObject(value))\n  ) {\n    if (~stack.indexOf(value)) {\n      throw new TypeError('Cannot convert circular structure to Immutable');\n    }\n    stack.push(value);\n    keyPath && key !== '' && keyPath.push(key);\n    var converted = converter.call(\n      parentValue,\n      key,\n      Seq(value).map(function (v, k) { return fromJSWith(stack, converter, v, k, keyPath, value); }\n      ),\n      keyPath && keyPath.slice()\n    );\n    stack.pop();\n    keyPath && keyPath.pop();\n    return converted;\n  }\n  return value;\n}\n\nfunction defaultConverter(k, v) {\n  // Effectively the opposite of \"Collection.toSeq()\"\n  return isIndexed(v) ? v.toList() : isKeyed(v) ? v.toMap() : v.toSet();\n}\n\nexport { fromJS };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAG,QAAQ,UAAU;AAC9B,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,aAAa,MAAM,uBAAuB;AAEjD,SAASC,MAAMA,CAACC,KAAK,EAAEC,SAAS,EAAE;EAChC,OAAOC,UAAU,CACf,EAAE,EACFD,SAAS,IAAIE,gBAAgB,EAC7BH,KAAK,EACL,EAAE,EACFC,SAAS,IAAIA,SAAS,CAACG,MAAM,GAAG,CAAC,GAAG,EAAE,GAAGC,SAAS,EAClD;IAAE,EAAE,EAAEL;EAAM,CACd,CAAC;AACH;AAEA,SAASE,UAAUA,CAACI,KAAK,EAAEL,SAAS,EAAED,KAAK,EAAEO,GAAG,EAAEC,OAAO,EAAEC,WAAW,EAAE;EACtE,IACE,OAAOT,KAAK,KAAK,QAAQ,IACzB,CAACN,WAAW,CAACM,KAAK,CAAC,KAClBH,WAAW,CAACG,KAAK,CAAC,IAAIP,WAAW,CAACO,KAAK,CAAC,IAAIF,aAAa,CAACE,KAAK,CAAC,CAAC,EAClE;IACA,IAAI,CAACM,KAAK,CAACI,OAAO,CAACV,KAAK,CAAC,EAAE;MACzB,MAAM,IAAIW,SAAS,CAAC,gDAAgD,CAAC;IACvE;IACAL,KAAK,CAACM,IAAI,CAACZ,KAAK,CAAC;IACjBQ,OAAO,IAAID,GAAG,KAAK,EAAE,IAAIC,OAAO,CAACI,IAAI,CAACL,GAAG,CAAC;IAC1C,IAAIM,SAAS,GAAGZ,SAAS,CAACa,IAAI,CAC5BL,WAAW,EACXF,GAAG,EACHf,GAAG,CAACQ,KAAK,CAAC,CAACe,GAAG,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;MAAE,OAAOf,UAAU,CAACI,KAAK,EAAEL,SAAS,EAAEe,CAAC,EAAEC,CAAC,EAAET,OAAO,EAAER,KAAK,CAAC;IAAE,CAC5F,CAAC,EACDQ,OAAO,IAAIA,OAAO,CAACU,KAAK,CAAC,CAC3B,CAAC;IACDZ,KAAK,CAACa,GAAG,CAAC,CAAC;IACXX,OAAO,IAAIA,OAAO,CAACW,GAAG,CAAC,CAAC;IACxB,OAAON,SAAS;EAClB;EACA,OAAOb,KAAK;AACd;AAEA,SAASG,gBAAgBA,CAACc,CAAC,EAAED,CAAC,EAAE;EAC9B;EACA,OAAOrB,SAAS,CAACqB,CAAC,CAAC,GAAGA,CAAC,CAACI,MAAM,CAAC,CAAC,GAAGxB,OAAO,CAACoB,CAAC,CAAC,GAAGA,CAAC,CAACK,KAAK,CAAC,CAAC,GAAGL,CAAC,CAACM,KAAK,CAAC,CAAC;AACvE;AAEA,SAASvB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
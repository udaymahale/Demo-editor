{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\udaym\\\\OneDrive\\\\Desktop\\\\DraftJsEditor\\\\basic-editor\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Editor, EditorState, RichUtils, convertToRaw, convertFromRaw } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport Button from './components/Button'; // Assuming Button component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyEditor() {\n  _s();\n  const [editorState, setEditorState] = useState(() => {\n    const savedContent = localStorage.getItem('draftContent');\n    if (savedContent) {\n      const contentState = convertFromRaw(JSON.parse(savedContent));\n      return EditorState.createWithContent(contentState);\n    } else {\n      return EditorState.createEmpty();\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem('draftContent', JSON.stringify(convertToRaw(editorState.getCurrentContent())));\n  }, [editorState]);\n  const saveContent = () => {\n    const contentState = editorState.getCurrentContent();\n    const rawContentState = convertToRaw(contentState);\n    localStorage.setItem('draftContent', JSON.stringify(rawContentState));\n  };\n  const handleKeyDown = e => {\n    if (e.key === '#' && e.target.tagName.toLowerCase() === 'div') {\n      e.preventDefault();\n      setEditorState(RichUtils.toggleBlockType(editorState, 'header-one'));\n    } else if (e.key === ' ' && e.target.tagName.toLowerCase() === 'div') {\n      const currentText = e.target.innerText;\n      if (currentText.startsWith('# ')) {\n        // Remove the \"#\" symbol and apply heading format\n        const newText = currentText.slice(2);\n        const contentState = editorState.getCurrentContent();\n        const selectionState = editorState.getSelection();\n        const newContentState = contentState.createTextContent(newText);\n        const newState = EditorState.push(editorState, newContentState, 'insert-characters');\n        setEditorState(RichUtils.toggleBlockType(newState, 'header-one'));\n      }\n    }\n  };\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      setEditorState(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n  const handleBeforeInput = char => {\n    const selection = editorState.getSelection();\n    const currentBlock = editorState.getCurrentContent().getBlockForKey(selection.getStartKey());\n    const text = currentBlock.getText();\n    if (text === '' && char === '*') {\n      setEditorState(RichUtils.toggleInlineStyle(editorState, 'BOLD'));\n      return 'handled';\n    } else if (text.endsWith('**') && char === ' ') {\n      setEditorState(RichUtils.toggleInlineStyle(editorState, 'RED'));\n      return 'handled';\n    } else if (text.endsWith('***') && char === ' ') {\n      setEditorState(RichUtils.toggleInlineStyle(editorState, 'UNDERLINE'));\n      return 'handled';\n    } else if (text.endsWith('````') && char === ' ') {\n      createCodeBlock();\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n  const createCodeBlock = () => {\n    const selection = editorState.getSelection();\n    const contentState = editorState.getCurrentContent();\n    const newContentState = contentState.createEntity('code-block', 'IMMUTABLE', {});\n    const entityKey = newContentState.getLastCreatedEntityKey();\n    const newEditorState = EditorState.set(editorState, {\n      currentContent: newContentState\n    });\n    setEditorState(RichUtils.insertSoftNewline(RichUtils.toggleBlockType(newEditorState, 'code-block', {\n      data: {\n        entityKey\n      }\n    })));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"DraftJs Editor by Uday Mahale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"Save\",\n        onClick: saveContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      editorState: editorState,\n      onChange: setEditorState,\n      handleBeforeInput: handleBeforeInput,\n      handleKeyCommand: handleKeyCommand,\n      onKeyDown: handleKeyDown,\n      placeholder: \"Type something...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(MyEditor, \"JH6xDpbL2mCsxHnPOamhucDlcYw=\");\n_c = MyEditor;\nexport default MyEditor;\nvar _c;\n$RefreshReg$(_c, \"MyEditor\");","map":{"version":3,"names":["React","useState","useEffect","Editor","EditorState","RichUtils","convertToRaw","convertFromRaw","Button","jsxDEV","_jsxDEV","MyEditor","_s","editorState","setEditorState","savedContent","localStorage","getItem","contentState","JSON","parse","createWithContent","createEmpty","setItem","stringify","getCurrentContent","saveContent","rawContentState","handleKeyDown","e","key","target","tagName","toLowerCase","preventDefault","toggleBlockType","currentText","innerText","startsWith","newText","slice","selectionState","getSelection","newContentState","createTextContent","newState","push","handleKeyCommand","command","handleBeforeInput","char","selection","currentBlock","getBlockForKey","getStartKey","text","getText","toggleInlineStyle","endsWith","createCodeBlock","createEntity","entityKey","getLastCreatedEntityKey","newEditorState","set","currentContent","insertSoftNewline","data","children","className","fileName","_jsxFileName","lineNumber","columnNumber","label","onClick","onChange","onKeyDown","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/udaym/OneDrive/Desktop/DraftJsEditor/basic-editor/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Editor, EditorState, RichUtils, convertToRaw, convertFromRaw } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport Button from './components/Button'; // Assuming Button component\n\nfunction MyEditor() {\n  const [editorState, setEditorState] = useState(() => {\n    const savedContent = localStorage.getItem('draftContent');\n    if (savedContent) {\n      const contentState = convertFromRaw(JSON.parse(savedContent));\n      return EditorState.createWithContent(contentState);\n    } else {\n      return EditorState.createEmpty();\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem('draftContent', JSON.stringify(convertToRaw(editorState.getCurrentContent())));\n  }, [editorState]);\n\n  const saveContent = () => {\n    const contentState = editorState.getCurrentContent();\n    const rawContentState = convertToRaw(contentState);\n    localStorage.setItem('draftContent', JSON.stringify(rawContentState));\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === '#' && e.target.tagName.toLowerCase() === 'div') {\n      e.preventDefault();\n      setEditorState(RichUtils.toggleBlockType(editorState, 'header-one'));\n    } else if (e.key === ' ' && e.target.tagName.toLowerCase() === 'div') {\n      const currentText = e.target.innerText;\n      if (currentText.startsWith('# ')) {\n        // Remove the \"#\" symbol and apply heading format\n        const newText = currentText.slice(2);\n        const contentState = editorState.getCurrentContent();\n        const selectionState = editorState.getSelection();\n        const newContentState = contentState.createTextContent(newText);\n        const newState = EditorState.push(\n          editorState,\n          newContentState,\n          'insert-characters'\n        );\n        setEditorState(RichUtils.toggleBlockType(newState, 'header-one'));\n      }\n    }\n  };\n\n  const handleKeyCommand = (command, editorState) => {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      setEditorState(newState);\n      return 'handled';\n    }\n    return 'not-handled';\n  };\n\n  const handleBeforeInput = (char) => {\n    const selection = editorState.getSelection();\n    const currentBlock = editorState.getCurrentContent().getBlockForKey(selection.getStartKey());\n    const text = currentBlock.getText();\n    \n    if (text === '' && char === '*') {\n      setEditorState(RichUtils.toggleInlineStyle(editorState, 'BOLD'));\n      return 'handled';\n    } else if (text.endsWith('**') && char === ' ') {\n      setEditorState(RichUtils.toggleInlineStyle(editorState, 'RED'));\n      return 'handled';\n    } else if (text.endsWith('***') && char === ' ') {\n      setEditorState(RichUtils.toggleInlineStyle(editorState, 'UNDERLINE'));\n      return 'handled';\n    } else if (text.endsWith('````') && char === ' ') {\n      createCodeBlock();\n      return 'handled';\n    }\n\n    return 'not-handled';\n  };\n\n  const createCodeBlock = () => {\n    const selection = editorState.getSelection();\n    const contentState = editorState.getCurrentContent();\n    const newContentState = contentState.createEntity('code-block', 'IMMUTABLE', {});\n    const entityKey = newContentState.getLastCreatedEntityKey();\n    const newEditorState = EditorState.set(editorState, { currentContent: newContentState });\n    setEditorState(\n      RichUtils.insertSoftNewline(\n        RichUtils.toggleBlockType(\n          newEditorState,\n          'code-block',\n          { data: { entityKey } }\n        )\n      )\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"header-container\">\n        <h2>DraftJs Editor by Uday Mahale</h2>\n        <Button label=\"Save\" onClick={saveContent} />\n      </div>\n      <Editor\n        editorState={editorState}\n        onChange={setEditorState}\n        handleBeforeInput={handleBeforeInput}\n        handleKeyCommand={handleKeyCommand}\n        onKeyDown={handleKeyDown}\n        placeholder=\"Type something...\"\n      />\n    </div>\n  );\n}\n\nexport default MyEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { wholeSlice, resolveEnd, resolveBegin } from './TrieUtils.js';\nimport { IndexedSeq } from './Seq.js';\nimport { is } from './is.js';\nimport { Iterator, iteratorDone, iteratorValue } from './Iterator.js';\nimport deepEqual from './utils/deepEqual.js';\n\n/**\n * Returns a lazy Seq of `value` repeated `times` times. When `times` is\n * undefined, returns an infinite sequence of `value`.\n */\nvar Repeat = /*@__PURE__*/function (IndexedSeq) {\n  function Repeat(value, times) {\n    if (!(this instanceof Repeat)) {\n      return new Repeat(value, times);\n    }\n    this._value = value;\n    this.size = times === undefined ? Infinity : Math.max(0, times);\n    if (this.size === 0) {\n      if (EMPTY_REPEAT) {\n        return EMPTY_REPEAT;\n      }\n      EMPTY_REPEAT = this;\n    }\n  }\n  if (IndexedSeq) Repeat.__proto__ = IndexedSeq;\n  Repeat.prototype = Object.create(IndexedSeq && IndexedSeq.prototype);\n  Repeat.prototype.constructor = Repeat;\n  Repeat.prototype.toString = function toString() {\n    if (this.size === 0) {\n      return 'Repeat []';\n    }\n    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n  };\n  Repeat.prototype.get = function get(index, notSetValue) {\n    return this.has(index) ? this._value : notSetValue;\n  };\n  Repeat.prototype.includes = function includes(searchValue) {\n    return is(this._value, searchValue);\n  };\n  Repeat.prototype.slice = function slice(begin, end) {\n    var size = this.size;\n    return wholeSlice(begin, end, size) ? this : new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n  };\n  Repeat.prototype.reverse = function reverse() {\n    return this;\n  };\n  Repeat.prototype.indexOf = function indexOf(searchValue) {\n    if (is(this._value, searchValue)) {\n      return 0;\n    }\n    return -1;\n  };\n  Repeat.prototype.lastIndexOf = function lastIndexOf(searchValue) {\n    if (is(this._value, searchValue)) {\n      return this.size;\n    }\n    return -1;\n  };\n  Repeat.prototype.__iterate = function __iterate(fn, reverse) {\n    var size = this.size;\n    var i = 0;\n    while (i !== size) {\n      if (fn(this._value, reverse ? size - ++i : i++, this) === false) {\n        break;\n      }\n    }\n    return i;\n  };\n  Repeat.prototype.__iterator = function __iterator(type, reverse) {\n    var this$1$1 = this;\n    var size = this.size;\n    var i = 0;\n    return new Iterator(function () {\n      return i === size ? iteratorDone() : iteratorValue(type, reverse ? size - ++i : i++, this$1$1._value);\n    });\n  };\n  Repeat.prototype.equals = function equals(other) {\n    return other instanceof Repeat ? is(this._value, other._value) : deepEqual(other);\n  };\n  return Repeat;\n}(IndexedSeq);\nvar EMPTY_REPEAT;\nexport { Repeat };","map":{"version":3,"names":["wholeSlice","resolveEnd","resolveBegin","IndexedSeq","is","Iterator","iteratorDone","iteratorValue","deepEqual","Repeat","value","times","_value","size","undefined","Infinity","Math","max","EMPTY_REPEAT","__proto__","prototype","Object","create","constructor","toString","get","index","notSetValue","has","includes","searchValue","slice","begin","end","reverse","indexOf","lastIndexOf","__iterate","fn","i","__iterator","type","this$1$1","equals","other"],"sources":["C:/Users/udaym/OneDrive/Desktop/DraftJsEditor/node_modules/immutable/dist/es/Repeat.js"],"sourcesContent":["/**\n * @license\n * MIT License\n * \n * Copyright (c) 2014-present, Lee Byron and other contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport { wholeSlice, resolveEnd, resolveBegin } from './TrieUtils.js';\nimport { IndexedSeq } from './Seq.js';\nimport { is } from './is.js';\nimport { Iterator, iteratorDone, iteratorValue } from './Iterator.js';\nimport deepEqual from './utils/deepEqual.js';\n\n/**\n * Returns a lazy Seq of `value` repeated `times` times. When `times` is\n * undefined, returns an infinite sequence of `value`.\n */\nvar Repeat = /*@__PURE__*/(function (IndexedSeq) {\n  function Repeat(value, times) {\n    if (!(this instanceof Repeat)) {\n      return new Repeat(value, times);\n    }\n    this._value = value;\n    this.size = times === undefined ? Infinity : Math.max(0, times);\n    if (this.size === 0) {\n      if (EMPTY_REPEAT) {\n        return EMPTY_REPEAT;\n      }\n      EMPTY_REPEAT = this;\n    }\n  }\n\n  if ( IndexedSeq ) Repeat.__proto__ = IndexedSeq;\n  Repeat.prototype = Object.create( IndexedSeq && IndexedSeq.prototype );\n  Repeat.prototype.constructor = Repeat;\n\n  Repeat.prototype.toString = function toString () {\n    if (this.size === 0) {\n      return 'Repeat []';\n    }\n    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n  };\n\n  Repeat.prototype.get = function get (index, notSetValue) {\n    return this.has(index) ? this._value : notSetValue;\n  };\n\n  Repeat.prototype.includes = function includes (searchValue) {\n    return is(this._value, searchValue);\n  };\n\n  Repeat.prototype.slice = function slice (begin, end) {\n    var size = this.size;\n    return wholeSlice(begin, end, size)\n      ? this\n      : new Repeat(\n          this._value,\n          resolveEnd(end, size) - resolveBegin(begin, size)\n        );\n  };\n\n  Repeat.prototype.reverse = function reverse () {\n    return this;\n  };\n\n  Repeat.prototype.indexOf = function indexOf (searchValue) {\n    if (is(this._value, searchValue)) {\n      return 0;\n    }\n    return -1;\n  };\n\n  Repeat.prototype.lastIndexOf = function lastIndexOf (searchValue) {\n    if (is(this._value, searchValue)) {\n      return this.size;\n    }\n    return -1;\n  };\n\n  Repeat.prototype.__iterate = function __iterate (fn, reverse) {\n    var size = this.size;\n    var i = 0;\n    while (i !== size) {\n      if (fn(this._value, reverse ? size - ++i : i++, this) === false) {\n        break;\n      }\n    }\n    return i;\n  };\n\n  Repeat.prototype.__iterator = function __iterator (type, reverse) {\n    var this$1$1 = this;\n\n    var size = this.size;\n    var i = 0;\n    return new Iterator(function () { return i === size\n        ? iteratorDone()\n        : iteratorValue(type, reverse ? size - ++i : i++, this$1$1._value); }\n    );\n  };\n\n  Repeat.prototype.equals = function equals (other) {\n    return other instanceof Repeat\n      ? is(this._value, other._value)\n      : deepEqual(other);\n  };\n\n  return Repeat;\n}(IndexedSeq));\n\nvar EMPTY_REPEAT;\n\nexport { Repeat };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}